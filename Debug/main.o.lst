   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB175:
  26              	 .file 1 "C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 262 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 263:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 265 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 266:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 266 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE175:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB176:
 267:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 288 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 289:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 291 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 292:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 292 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE176:
 114 0022 00BF     	 .section .text.XMC_GPIO_ToggleOutput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_GPIO_ToggleOutput:
 120              	.LFB177:
 293:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** {
 121              	 .loc 1 314 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 137 0008 0B46     	 mov r3,r1
 138 000a FB70     	 strb r3,[r7,#3]
 315:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 139              	 .loc 1 317 0
 140 000c FB78     	 ldrb r3,[r7,#3]
 141 000e 4FF00112 	 mov r2,#65537
 142 0012 9A40     	 lsls r2,r2,r3
 143 0014 7B68     	 ldr r3,[r7,#4]
 144 0016 5A60     	 str r2,[r3,#4]
 318:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_gpio.h **** }
 145              	 .loc 1 318 0
 146 0018 0C37     	 adds r7,r7,#12
 147              	.LCFI15:
 148              	 .cfi_def_cfa_offset 4
 149 001a BD46     	 mov sp,r7
 150              	.LCFI16:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 001c 5DF8047B 	 ldr r7,[sp],#4
 154              	.LCFI17:
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 0020 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE177:
 161 0022 00BF     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 162              	 .align 2
 163              	 .thumb
 164              	 .thumb_func
 166              	DIGITAL_IO_SetOutputHigh:
 167              	.LFB234:
 168              	 .file 2 "C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 169              	 .loc 2 277 0
 170              	 .cfi_startproc
 171              	 
 172              	 
 173 0000 80B5     	 push {r7,lr}
 174              	.LCFI18:
 175              	 .cfi_def_cfa_offset 8
 176              	 .cfi_offset 7,-8
 177              	 .cfi_offset 14,-4
 178 0002 82B0     	 sub sp,sp,#8
 179              	.LCFI19:
 180              	 .cfi_def_cfa_offset 16
 181 0004 00AF     	 add r7,sp,#0
 182              	.LCFI20:
 183              	 .cfi_def_cfa_register 7
 184 0006 7860     	 str r0,[r7,#4]
 278:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 185              	 .loc 2 279 0
 186 0008 7B68     	 ldr r3,[r7,#4]
 187 000a 1A68     	 ldr r2,[r3]
 188 000c 7B68     	 ldr r3,[r7,#4]
 189 000e 1B7C     	 ldrb r3,[r3,#16]
 190 0010 1046     	 mov r0,r2
 191 0012 1946     	 mov r1,r3
 192 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 193              	 .loc 2 280 0
 194 0018 0837     	 adds r7,r7,#8
 195              	.LCFI21:
 196              	 .cfi_def_cfa_offset 8
 197 001a BD46     	 mov sp,r7
 198              	.LCFI22:
 199              	 .cfi_def_cfa_register 13
 200              	 
 201 001c 80BD     	 pop {r7,pc}
 202              	 .cfi_endproc
 203              	.LFE234:
 205 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 206              	 .align 2
 207              	 .thumb
 208              	 .thumb_func
 210              	DIGITAL_IO_SetOutputLow:
 211              	.LFB235:
 281:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 212              	 .loc 2 325 0
 213              	 .cfi_startproc
 214              	 
 215              	 
 216 0000 80B5     	 push {r7,lr}
 217              	.LCFI23:
 218              	 .cfi_def_cfa_offset 8
 219              	 .cfi_offset 7,-8
 220              	 .cfi_offset 14,-4
 221 0002 82B0     	 sub sp,sp,#8
 222              	.LCFI24:
 223              	 .cfi_def_cfa_offset 16
 224 0004 00AF     	 add r7,sp,#0
 225              	.LCFI25:
 226              	 .cfi_def_cfa_register 7
 227 0006 7860     	 str r0,[r7,#4]
 326:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 228              	 .loc 2 327 0
 229 0008 7B68     	 ldr r3,[r7,#4]
 230 000a 1A68     	 ldr r2,[r3]
 231 000c 7B68     	 ldr r3,[r7,#4]
 232 000e 1B7C     	 ldrb r3,[r3,#16]
 233 0010 1046     	 mov r0,r2
 234 0012 1946     	 mov r1,r3
 235 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 236              	 .loc 2 328 0
 237 0018 0837     	 adds r7,r7,#8
 238              	.LCFI26:
 239              	 .cfi_def_cfa_offset 8
 240 001a BD46     	 mov sp,r7
 241              	.LCFI27:
 242              	 .cfi_def_cfa_register 13
 243              	 
 244 001c 80BD     	 pop {r7,pc}
 245              	 .cfi_endproc
 246              	.LFE235:
 248 001e 00BF     	 .section .text.DIGITAL_IO_ToggleOutput,"ax",%progbits
 249              	 .align 2
 250              	 .thumb
 251              	 .thumb_func
 253              	DIGITAL_IO_ToggleOutput:
 254              	.LFB236:
 329:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 330:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 331:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 332:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 333:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 334:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 335:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 336:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 337:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 338:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 339:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 340:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 341:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 342:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 343:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 344:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 345:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 346:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 347:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 348:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 349:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 350:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 351:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 352:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 353:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 354:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 355:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 356:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 357:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 358:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 359:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 360:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 361:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 363:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 364:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 365:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 366:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 367:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 368:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 369:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 370:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 371:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 372:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 373:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 374:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 375:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 376:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 377:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 378:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 255              	 .loc 2 378 0
 256              	 .cfi_startproc
 257              	 
 258              	 
 259 0000 80B5     	 push {r7,lr}
 260              	.LCFI28:
 261              	 .cfi_def_cfa_offset 8
 262              	 .cfi_offset 7,-8
 263              	 .cfi_offset 14,-4
 264 0002 82B0     	 sub sp,sp,#8
 265              	.LCFI29:
 266              	 .cfi_def_cfa_offset 16
 267 0004 00AF     	 add r7,sp,#0
 268              	.LCFI30:
 269              	 .cfi_def_cfa_register 7
 270 0006 7860     	 str r0,[r7,#4]
 379:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 380:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 271              	 .loc 2 380 0
 272 0008 7B68     	 ldr r3,[r7,#4]
 273 000a 1A68     	 ldr r2,[r3]
 274 000c 7B68     	 ldr r3,[r7,#4]
 275 000e 1B7C     	 ldrb r3,[r3,#16]
 276 0010 1046     	 mov r0,r2
 277 0012 1946     	 mov r1,r3
 278 0014 FFF7FEFF 	 bl XMC_GPIO_ToggleOutput
 381:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 279              	 .loc 2 381 0
 280 0018 0837     	 adds r7,r7,#8
 281              	.LCFI31:
 282              	 .cfi_def_cfa_offset 8
 283 001a BD46     	 mov sp,r7
 284              	.LCFI32:
 285              	 .cfi_def_cfa_register 13
 286              	 
 287 001c 80BD     	 pop {r7,pc}
 288              	 .cfi_endproc
 289              	.LFE236:
 291 001e 00BF     	 .section .text.XMC_SPI_CH_GetStatusFlag,"ax",%progbits
 292              	 .align 2
 293              	 .thumb
 294              	 .thumb_func
 296              	XMC_SPI_CH_GetStatusFlag:
 297              	.LFB311:
 298              	 .file 3 "C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc/xmc_spi.h"
   1:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
   2:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @file xmc_spi.h
   3:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @date 2020-12-05
   4:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
   5:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @cond
   6:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
   7:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
   9:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * All rights reserved.
  11:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  12:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  14:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * do so, all subject to the following:
  20:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  21:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * a source language processor.
  27:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  28:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  36:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
  40:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  41:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Change History
  42:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * --------------
  43:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  44:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-02-20:
  45:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Initial
  46:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  47:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-05-20:
  48:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Documentation improved <br>
  49:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetSlaveSelectDelay(), XMC_SPI_CH_TriggerServiceRequest() and
  50:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_SelectInterruptNodePointer() <br>
  51:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetInterwordDelaySCLK() <br>
  52:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  53:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-06-20:
  54:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  55:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  56:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-24:
  57:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation()
  58:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_EnableDelayCompensation() <br>
  59:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  60:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-27:
  61:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalTo
  62:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  63:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-01:
  64:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  65:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_Di
  66:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *       for supporting multiple events configuration <br>
  67:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  68:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-08:
  69:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Adding API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedIn
  70:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  71:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-04-10:
  72:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added an API for configuring the transmit mode:XMC_SPI_CH_SetTransmitMode() <br>
  73:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  74:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-05-20:
  75:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_EnableDataTransmission() and XMC_SPI_CH_DisableDataTransmission()
  76:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  77:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-03-30:
  78:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Fix XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX macro value
  79:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  80:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-05-07:
  81:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added normal_divider_mode to XMC_SPI_CH_CONFIG_t configuration structure.
  82:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  83:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetBaudrateEx()
  84:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  85:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-09-04:
  86:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CLOCK_MODE_t enum
  87:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  88:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 2020-12-05:
  89:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  90:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  91:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @endcond
  92:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
  93:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
  94:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
  95:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #ifndef XMC_SPI_H
  96:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI_H
  97:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
  98:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
  99:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * HEADER FILES
 100:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 101:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #include "xmc_usic.h"
 102:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 103:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 104:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup XMClib XMC Peripheral Library
 105:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 106:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 107:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 108:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 109:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup SPI
 110:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @brief Synchronous serial channel driver for SPI-like communication.
 111:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 112:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * The SPI driver uses Universal Serial Interface Channel(USIC) module.
 113:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * The USIC module supports multiple data lines for SPI communication. \n
 114:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Full duplex communication with 2 separate lines for transmission and reception.
 115:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Half duplex communication with 1 common line shared for transmission and reception.
 116:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Dual mode communication with 2 common lines shared for transmission and reception.
 117:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Quad mode communication with 4 common lines shared for transmission and reception.<br><br>
 118:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 119:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver provides structures, enumerations and APIs for configuring the USIC channel for SPI c
 120:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * and also for data transaction.<br>
 121:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver features:
 122:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Configuration structure XMC_SPI_CH_CONFIG_t and SPI initialization function XMC_SPI_CH_Init()
 123:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of protocol word and frame length using XMC_SPI_CH_SetWordLength(), XMC_
 124:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows manipulation of data frame at runtime using XMC_SPI_CH_EnableSOF(), XMC_SPI_CH_EnableE
 125:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  XMC_SPI_CH_EnableSlaveSelect(), XMC_SPI_CH_DisableSlaveSelect()
 126:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides APIs for transmitting data and receiving data using XMC_SPI_CH_Transmit(), XMC_SPI_C
 127:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of shift clock using XMC_SPI_CH_ConfigureShiftClockOutput()
 128:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides enumeration of SPI protocol events using @ref XMC_SPI_CH_STATUS_FLAG_t
 129:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 130:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 131:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 132:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 133:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * MACROS
 134:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 135:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 136:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC0)
 137:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH0 XMC_USIC0_CH0 /**< SPI0 channel 0 base address */
 138:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH1 XMC_USIC0_CH1 /**< SPI0 channel 1 base address */
 139:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 140:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 141:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC1)
 142:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH0 XMC_USIC1_CH0 /**< SPI1 channel 0 base address */
 143:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH1 XMC_USIC1_CH1 /**< SPI1 channel 1 base address */
 144:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 145:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 146:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC2)
 147:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH0 XMC_USIC2_CH0 /**< SPI2 channel 0 base address */
 148:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH1 XMC_USIC2_CH1 /**< SPI2 channel 1 base address */
 149:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 150:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 151:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 152:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * ENUMS
 153:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 154:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 155:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 156:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines return status of SPI driver APIs
 157:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 158:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS
 159:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 160:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_OK,    /**< Status of the Module: OK */
 161:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_ERROR, /**< Status of the Module: ERROR */
 162:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_BUSY   /**< The Module is busy */
 163:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_t;
 164:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 165:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the SPI bus mode
 166:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 167:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BUS_MODE
 168:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 169:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_MASTER, /**< SPI Master */
 170:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_SLAVE   /**< SPI Slave */
 171:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BUS_MODE_t;
 172:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 173:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 174:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the slave select signals SELO[7:0] in relation to the master slave selec
 175:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 176:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SEL_MSLS_INV
 177:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 178:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_SAME_AS_MSLS = 0x0UL, /**< The SELO outputs have the same polarity as the MS
 179:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                   (active high) */
 180:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_INV_TO_MSLS = 0x1UL << USIC_CH_PCR_SSCMode_SELINV_Pos /**< The SELO outputs 
 181:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   polarity to the M
 182:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   (active low)*/
 183:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t;
 184:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 185:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 186:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the data inputs.
 187:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 188:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_DATA_POLARITY
 189:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 190:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_DIRECT = 0x0UL, /**< The polarity of the data line is not inverted */
 191:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_INVERT = 0x1UL << USIC_CH_DX2CR_DPOL_Pos /**< The polarity of the data l
 192:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_DATA_POLARITY_t;
 193:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 194:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 195:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines Slave Select lines
 196:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 197:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SELECT
 198:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 199:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_0 = 1UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 0 */
 200:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_1 = 2UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 1 */
 201:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_2 = 4UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 2 */
 202:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_3 = 8UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 3 */
 203:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_4 = 16UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 4 */
 204:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_5 = 32UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 5 */
 205:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_6 = 64UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 6 */
 206:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_7 = 128UL << USIC_CH_PCR_SSCMode_SELO_Pos /**< Slave Select line 7 */
 207:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SELECT_t;
 208:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 209:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 210:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI specific events
 211:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 212:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_EVENT
 213:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 214:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 215:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 216:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 217:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 218:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 219:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 220:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 221:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 222:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_PARITY_ERROR = USIC_CH_PCR_SSCMode_PARIEN_Msk >> 13U,       /**< Parity error ev
 223:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_MSLS_CHANGE =  USIC_CH_PCR_SSCMode_MSLSIEN_Msk >> 13U,      /**< Master slave se
 224:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DX2TIEN_ACTIVATED = USIC_CH_PCR_SSCMode_DX2TIEN_Msk >> 13U  /**< Slave select in
 225:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_EVENT_t;
 226:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 227:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 228:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI event status
 229:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 230:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS_FLAG
 231:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 232:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS = USIC_CH_PSR_SSCMode_MSLS_Msk,                          /**< Status 
 233:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             select(
 234:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_SSCMode_DX2S_Msk,                          /**< Status 
 235:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input(D
 236:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED = USIC_CH_PSR_SSCMode_MSLSEV_Msk,         /**< Status 
 237:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             output 
 238:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_SSCMode_DX2TEV_Msk,         /**< Status 
 239:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input s
 240:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_PARITY_ERROR_EVENT_DETECTED = USIC_CH_PSR_SSCMode_PARERR_Msk, /**< Indicat
 241:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             parity 
 242:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_SSCMode_RSIF_Msk,     /**< Status 
 243:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 244:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_SSCMode_DLIF_Msk,          /**< Status 
 245:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_SSCMode_TSIF_Msk,      /**< Status
 246:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 247:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_SSCMode_TBIF_Msk,    /**< Status 
 248:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 249:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_RIF_Msk,             /**< Status 
 250:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_AIF_Msk, /**< Status 
 251:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             receive
 252:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_SSCMode_BRGIF_Msk/**< Status 
 253:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             generat
 254:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_FLAG_t;
 255:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 256:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 257:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines input frequency sources for slave select signal delay configuration.
 258:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 259:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY
 260:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 261:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPDIV = 0x0UL, /**< Output of PDIV divider: FPDIV */
 262:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPPP  = 0x1UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< P
 263:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FSCLK = 0x2UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< S
 264:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FMCLK = 0x3UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos  /**< M
 265:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_t;
 266:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 267:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 268:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Define data and clock input stages
 269:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 270:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT
 271:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 272:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */
 273:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 274:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SELIN = 2UL,  /**< Slave select input stage */
 275:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 276:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 277:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 278:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_t;
 279:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 280:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 281:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Define SPI data transfer mode
 282:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 283:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_MODE
 284:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 285:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD = 0UL,            /**< SPI standard full duplex mode */
 286:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX = 5UL, /**< SPI standard half duplex mode */
 287:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_DUAL = 6UL,                /**< SPI half duplex mode with dual data lines */
 288:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_QUAD = 7UL                 /**< SPI half duplex mode with quad data lines */
 289:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_MODE_t;
 290:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 291:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 292:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 293:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock passive level
 294:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 295:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 296:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 297:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay disabled */
 298:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 299:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay disabled */
 300:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 301:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay enabled */
 302:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 303:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay enabled */
 304:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 305:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 306:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 307:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 308:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI clock modes
 309:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 310:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 311:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=0 is a clock which idles at 0, and each cycle consists of a pulse of 1. That is, the leadin
 312:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=1 is a clock which idles at 1, and each cycle consists of a pulse of 0. That is, the leadin
 313:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /* CPHA=0, the "out" side changes the data on the trailing edge of the preceding clock cycle, while
 314:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****    The out side holds the data valid until the trailing edge of the current clock cycle. For the fi
 315:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /* For CPHA=1, the "out" side changes the data on the leading edge of the current clock cycle, whil
 316:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   The out side holds the data valid until the leading edge of the following clock cycle. For the la
 317:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CLOCK_MODE
 318:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 319:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
 320:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
 321:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
 322:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED
 323:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CLOCK_MODE_t;
 324:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 325:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 326:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock output
 327:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** */
 328:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT
 329:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 330:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,  /**< Baudrate 
 331:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 332:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 333:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 334:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 335:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI channel interrupt node pointers
 336:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 337:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INTERRUPT_NODE_POINTER
 338:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 339:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 340:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 341:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 342:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 343:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 344:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INTERRUPT_NODE_POINTER_t;
 345:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 346:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 347:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * DATA STRUCTURES
 348:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** ***************************************************************************************************
 349:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 350:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 351:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Structure for initializing SPI channel.
 352:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 353:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** typedef struct XMC_SPI_CH_CONFIG
 354:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 355:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   uint32_t baudrate;							                /**< Module baud rate for communication */
 356:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   bool normal_divider_mode;                       /**< Selects normal divider mode for baudrate gen
 357:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_t bus_mode;                 /**< Bus mode: Master/Slave */
 358:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t selo_inversion; /**< Enable inversion of Slave select signal rela
 359:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                                                        MSLS signal  */
 360:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;          /**< Enable parity check for transmit and receive
 361:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_CONFIG_t;
 362:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 363:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 364:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * API PROTOTYPES
 365:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 366:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 367:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef __cplusplus
 368:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** extern "C" {
 369:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 370:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 371:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 372:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 373:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 374:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 375:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 376:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 377:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 378:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 379:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 380:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 381:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 382:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 383:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 384:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 385:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 386:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 387:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 388:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 389:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 390:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 391:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 392:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 393:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 394:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 395:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 396:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 397:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 398:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 399:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 400:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 401:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config, bool 
 402:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 403:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 404:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 405:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 406:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 407:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 408:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 409:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 410:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 411:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 412:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 413:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 414:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 415:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 416:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 417:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 418:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 419:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 420:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 421:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 422:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 423:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 424:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 425:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 426:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 427:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 428:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 429:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 430:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 431:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 432:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Init(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const
 433:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 434:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_InitEx(channel, config, true);
 435:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** }
 436:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 437:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 438:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 439:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 440:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 441:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 442:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 443:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected USIC channel to operate in SPI mode, by setting CCR.MODE bits.\n\n
 444:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * It should be executed after XMC_SPI_CH_Init() during initialization. By invoking XMC_SPI_CH_Stop
 445:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * to IDLE state. Call XMC_SPI_CH_Start() to set the SPI mode again, as needed later in the program
 446:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 447:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 448:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 449:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 450:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Start(XMC_USIC_CH_t *const channel)
 451:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 452:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   /* USIC channel in SPI mode */
 453:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_SPI);
 454:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** }
 455:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 456:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 457:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 458:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 459:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for stopping is processed
 460:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 461:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 462:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 463:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 464:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected SPI channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 465:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * After calling XMC_SPI_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_SPI_C
 466:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * invoked to start the communication again.
 467:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 468:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 469:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Start()
 470:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 471:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel);
 472:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 473:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 474:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 475:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 476:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 477:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 478:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 479:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 480:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 481:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 482:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 483:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 484:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 485:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 486:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 487:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 488:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 489:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 490:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 491:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 492:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 493:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 494:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 495:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 496:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 497:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 498:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 499:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 500:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 501:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 502:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 503:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 504:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 505:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 506:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 507:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 508:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param slave Slave select signal.\n
 509:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ref XMC_SPI_CH_SLAVE_SELECT_t for valid values.
 510:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 511:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 512:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 513:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 514:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable the selected slave signal by setting PCR.SELO bits.\n\n
 515:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Each slave is connected with one slave select signal. This is not configured in XMC_SPI_CH_Init(
 516:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() with required \a slave to to start the communication. After finis
 517:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * communication XMC_SPI_CH_DisableSlaveSelect() can be invoked to disable the slaves.
 518:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 519:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 520:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSlaveSelect()
 521:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 522:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 523:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 524:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 525:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant ponter to XMC_USIC_CH_t, pointing to the USIC channel base address.
 526:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 527:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 528:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 529:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 530:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Disable all the slave signals by clearing PCR.SELO bits.\n\n
 531:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() has to be invoked to start the communication with the desired sla
 532:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 533:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 534:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect()
 535:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 536:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel);
 537:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 538:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 539:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 540:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 541:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 542:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 543:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 544:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 545:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 546:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. \n\n
 547:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * By enabling this the direction of the data pin is updated by hardware itself. Before transmittin
 548:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * mode to ensure the proper communication.
 549:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 550:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 551:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Transmit()
 552:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 553:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetTransmitMode(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE
 554:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 555:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 556:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****                  (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 557:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** }
 558:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 559:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 560:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 561:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param data Data to be transmitted
 562:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 563:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 564:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 565:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 566:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 567:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 568:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 569:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. By enabling this the 
 570:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * pin is updated by hardware itself. TCI(Transmit Control Information) allows dynamic control of b
 571:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * and pin direction during data transfers by writing to SCTR.DSM and SCTR.HPCDIR bit fields. To su
 572:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * update, TCSR.HPCMD(Hardware Port control) will be enabled during the initialization using XMC_SP
 573:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 574:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 575:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 576:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 577:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 578:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 579:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 580:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 581:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 582:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 583:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 584:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 585:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 586:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 587:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 588:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 589:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 590:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be invoked to read the data from the buffers.
 591:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 592:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 593:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedDaa()
 594:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 595:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE_t mode)
 596:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 597:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   /* Transmit dummy data */
 598:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_Transmit(channel, (uint16_t)0xffffU, (XMC_SPI_CH_MODE_t)((uint16_t)mode & 0xfffbU));
 599:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** }
 600:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 601:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 602:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 603:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 604:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint16_t Data read from the receive buffer.
 605:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 606:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 607:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 608:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Invocation of XMC_SPI_CH_Receive() receives the data and place it into receive buffer. After rec
 609:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be used to read the data from the buffer.
 610:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 611:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 612:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 613:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 614:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 615:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 616:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 617:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 618:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 619:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 620:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 621:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 622:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 623:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. Invoke XMC_SPI_CH_SetBitOrderLsbFirst() to set di
 624:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * the program.
 625:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 626:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 627:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderMsbFirst()
 628:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 629:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 630:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 631:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 632:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** }
 633:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 634:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 635:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 636:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 637:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 638:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 639:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 640:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from MSB to LSB, by setting SCTR.SDIR bit.\n\n
 641:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. This is not set during XMC_SPI_CH_Init().
 642:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Invoke XMC_SPI_CH_SetBitOrderMsbFirst() to set direction as needed in the program.
 643:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 644:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 645:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderLsbFirst()
 646:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 647:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderMsbFirst(XMC_USIC_CH_t *const channel)
 648:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 649:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR |= (uint32_t)USIC_CH_SCTR_SDIR_Msk;
 650:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** }
 651:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 652:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 653:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 654:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be enabled.
 655:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 656:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 657:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 658:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 659:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 660:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 661:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the SPI protocol specific events, by configuring PCR register.\n\n
 662:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Events can be enabled as needed using XMC_SPI_CH_EnableEvent().
 663:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent() can be used to disable the events.
 664:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 665:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 666:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent()
 667:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 668:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 669:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 670:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 671:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 672:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be disabled.
 673:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 674:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 675:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 676:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 677:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 678:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 679:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the SPI protocol specific events, by configuring PCR register.\n\n
 680:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * After disabling the events, XMC_SPI_CH_EnableEvent() has to be invoked to re-enable the events.
 681:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 682:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 683:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableEvent()
 684:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 685:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 686:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** 
 687:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** /**
 688:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 689:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 690:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint32_t Status of SPI protocol events.
 691:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 692:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 693:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * Returns the status of the events, by reading PSR register.\n\n
 694:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * This indicates the status of the all the events, for SPI communication.
 695:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  *
 696:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 697:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_ClearStatusFlag()
 698:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****  */
 699:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE uint32_t XMC_SPI_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 700:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** {
 299              	 .loc 3 700 0
 300              	 .cfi_startproc
 301              	 
 302              	 
 303              	 
 304 0000 80B4     	 push {r7}
 305              	.LCFI33:
 306              	 .cfi_def_cfa_offset 4
 307              	 .cfi_offset 7,-4
 308 0002 83B0     	 sub sp,sp,#12
 309              	.LCFI34:
 310              	 .cfi_def_cfa_offset 16
 311 0004 00AF     	 add r7,sp,#0
 312              	.LCFI35:
 313              	 .cfi_def_cfa_register 7
 314 0006 7860     	 str r0,[r7,#4]
 701:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h ****   return channel->PSR_SSCMode;
 315              	 .loc 3 701 0
 316 0008 7B68     	 ldr r3,[r7,#4]
 317 000a 9B6C     	 ldr r3,[r3,#72]
 702:C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc\xmc_spi.h **** }
 318              	 .loc 3 702 0
 319 000c 1846     	 mov r0,r3
 320 000e 0C37     	 adds r7,r7,#12
 321              	.LCFI36:
 322              	 .cfi_def_cfa_offset 4
 323 0010 BD46     	 mov sp,r7
 324              	.LCFI37:
 325              	 .cfi_def_cfa_register 13
 326              	 
 327 0012 5DF8047B 	 ldr r7,[sp],#4
 328              	.LCFI38:
 329              	 .cfi_restore 7
 330              	 .cfi_def_cfa_offset 0
 331 0016 7047     	 bx lr
 332              	 .cfi_endproc
 333              	.LFE311:
 335              	 .section .text.SPI_MASTER_GetFlagStatus,"ax",%progbits
 336              	 .align 2
 337              	 .thumb
 338              	 .thumb_func
 340              	SPI_MASTER_GetFlagStatus:
 341              	.LFB344:
 342              	 .file 4 "C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER/spi_master.h"
   1:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
   2:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @file spi_master.h
   3:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @date 2016-06-20
   4:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   5:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * NOTE:
   6:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   8:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @cond
   9:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  10:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI_MASTER v4.3.30 - Configures the properties of USIC channel to support SPI mode of communicat
  11:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  12:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  13:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * All rights reserved.
  14:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  15:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * following conditions are met:
  17:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  18:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   disclaimer.
  20:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  21:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  24:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   products derived from this software without specific prior written permission.
  26:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  27:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  35:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  38:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  39:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Change History
  40:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * --------------
  41:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  42:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-16:
  43:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Initial version<br>
  44:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  45:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-20:
  46:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Added 'SPI_MASTER_INPUT_INVALID' in SPI_MASTER_INPUT_t to support dynamic mode change from
  47:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       as well<br>
  48:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  49:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-05-08:
  50:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_SetBaudRate() and SPI_MASTER_Transfer() are added<br>
  51:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - C++ guard applied to API section only<br>
  52:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - File guard updated according to the guidelines<br>
  53:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "SPI_MASTER_STATUS_BUFFER_INVALID" is added in SPI_MASTER_STATUS_t enum<br>
  54:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "leading_trailing_delay" is added in APP config structure<br>
  55:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "tx_data_dummy" is added in Dynamic config structure to support SPI_MASTER_Transfer() API<
  56:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - XMC_ASSERT() are for NULL handle check in inline APIs<br>
  57:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_lTransmitHandler(), SPI_MASTER_lReceiveHandler(), SPI_MASTER_lProtocolHandler()
  58:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       spi_master_conf.c file<br>
  59:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  60:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-06-20:
  61:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - For SPI_MASTER_Transfer(), SPI_MASTER_Receive(), SPI_MASTER_Transmit() APIs, the input dat
  62:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       from 16-bit to 8-bit.
  63:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - word_length fields is added in SPI_MASTER_DYNAMIC_CONFIG_t, to support runtime change.
  64:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Abort API are updated to return the status.
  65:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  66:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-07-07:
  67:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - DYNAMIC_CONFIG_t is renamed as RUNTIME_t
  68:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  69:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-09-30:
  70:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - New SPI_MASTER_STATUS_MODE_MISMATCH item is added in SPI_MASTER_STATUS_t
  71:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  72:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-08:
  73:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_DMA_MAXCOUNT is exposed to the user.
  74:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - dx0_input_half_duplex is added to support while changing the mode to half duplex mode.
  75:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_IsTxBusy() and SPI_MASTER_IsRxBusy() APIs are added to return the current state
  76:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Documentation update.
  77:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  78:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-14:
  79:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - new variable "spi_master_config_mode" to store the actual mode generated during initialisa
  80:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  81:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2016-04-07:
  82:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - runtime variable are made as volatile.
  83:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  84:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2021-01-08:
  85:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Modified check for minimum XMCLib version
  86:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  87:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcond
  88:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  89:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
  90:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
  91:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #ifndef SPI_MASTER_H
  92:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_H
  93:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
  94:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * HEADER FILES
  95:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  96:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_gpio.h"
  97:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_scu.h"
  98:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_spi.h"
  99:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #include "DAVE_Common.h"
 100:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #include "spi_master_conf.h"
 101:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 102:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 103:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #include "GLOBAL_DMA/global_dma.h"
 104:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 105:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 106:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 107:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * MACROS
 108:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 109:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_MAJOR_VERSION 2
 110:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_MINOR_VERSION 1
 111:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_PATCH_VERSION 6
 112:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 113:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if !((XMC_LIB_MAJOR_VERSION > SPI_MASTER_XMC_LIB_MAJOR_VERSION) ||\
 114:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****       ((XMC_LIB_MAJOR_VERSION == SPI_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > SPI_
 115:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****       ((XMC_LIB_MAJOR_VERSION == SPI_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == SPI
 116:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #error "SPI_MASTER requires XMC Peripheral Library v2.1.6 or higher"
 117:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 118:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 119:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /*
 120:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Represents the maximum data size for DMA transaction*/
 121:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_DMA_MAXCOUNT (4095U)
 122:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 123:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * ENUMS
 124:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 125:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 126:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_enumerations
 127:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 128:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 129:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 130:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Return status of the SPI_MASTER APP
 131:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 132:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_STATUS
 133:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 134:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_SUCCESS = 0U,   /**< Status success */
 135:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_FAILURE,        /**< Status failure */
 136:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUSY,           /**< Busy state */
 137:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUFFER_INVALID,  /**< If input buffer and length is invalid */
 138:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_MODE_MISMATCH   /**< API invoked by a handle configured with different mode.
 139:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                          e.g, If SPI_MASTER_StartTransmitDMA is invoked for an inst
 140:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                          which has transmit mode configured as "Interrupt", will
 141:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                          return this status.*/
 142:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_STATUS_t;
 143:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 144:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 145:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Service ID for Transmit, Receive and Parity events
 146:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 147:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SR_ID
 148:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 149:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_0 = 0U, /**< SR-0 */
 150:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_1,      /**< SR-1 */
 151:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_2,      /**< SR-2 */
 152:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_3,      /**< SR-3 */
 153:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_4,      /**< SR-4 */
 154:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_5       /**< SR-5 */
 155:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SR_ID_t;
 156:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 157:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 158:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Slave select signals
 159:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 160:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SS_SIGNAL
 161:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 162:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_0 = 0U, /**< Slave select 0 */
 163:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_1,      /**< Slave select 1 */
 164:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_2,      /**< Slave select 2 */
 165:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_3,      /**< Slave select 3 */
 166:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_4,      /**< Slave select 4 */
 167:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_5,      /**< Slave select 5 */
 168:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_6,      /**< Slave select 6 */
 169:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_7       /**< Slave select 7 */
 170:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SS_SIGNAL_t;
 171:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 172:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 173:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum type which defines Receive input list
 174:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 175:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_INPUT
 176:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 177:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_A = 0U, /**< Input-A */
 178:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_B,      /**< Input-B */
 179:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_C,      /**< Input-C */
 180:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_D,      /**< Input-D */
 181:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_E,      /**< Input-E */
 182:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_F,      /**< Input-F */
 183:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_G,      /**< Input-G */
 184:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_INVALID /**< This is to check during mode switch */
 185:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_INPUT_t;
 186:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 187:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 188:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 189:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 190:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_TRANSFER_MODE
 191:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 192:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 193:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 194:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 195:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_TRANSFER_MODE_t;
 196:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 197:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 198:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 199:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 200:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef void (*SPI_MASTER_functionhandler)(void);
 201:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef SPI_MASTER_STATUS_t (*SPI_MASTER_lInit_functionhandler)(void);
 202:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 203:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 204:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** * DATA STRUCTURES
 205:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 206:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 207:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** * @ingroup SPI_MASTER_datastructures
 208:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** * @{
 209:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** */
 210:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 211:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 212:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Port pin selection for communication
 213:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 214:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO
 215:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 216:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_PORT_t* port;  /**< Reference to the port configuration */
 217:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t pin;  /**< Selected pin */
 218:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_t;
 219:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 220:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 221:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Pin configuration for the selected pins
 222:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 223:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO_CONFIG
 224:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 225:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_CONFIG_t port_config;  /**< Properties of the port pin */
 226:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_HWCTRL_t hw_control;  /**<  hardware control characteristics of the pin */
 227:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_SLAVE_SELECT_t slave_select_ch;  /**<  Indicates the mapped slave select line  */
 228:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_CONFIG_t;
 229:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 230:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 231:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Configuration parameters of SPI_MASTER APP
 232:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 233:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  typedef struct SPI_MASTER_CONFIG
 234:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 235:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_CONFIG_t * const channel_config;         /**< Reference to SPI configuration structure
 236:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_lInit_functionhandler fptr_spi_master_config;  /**< Function pointer to configure the 
 237:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 238:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Port configuration */
 239:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_0_pin;               /**< Reference to mosi 0 pin */
 240:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_0_pin_config; /**< Reference to mosi 0 pin configurati
 241:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_1_pin;               /**< Reference to mosi 1 pin */
 242:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_1_pin_config; /**< Reference to mosi 1 pin configurati
 243:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_2_pin;               /**< Reference to mosi 2 pin */
 244:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_2_pin_config; /**< Reference to mosi 2 pin configurati
 245:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_3_pin;               /**< Reference to mosi 3 pin */
 246:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_3_pin_config; /**< Reference to mosi 3 pin configurati
 247:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const sclk_out_pin;             /**< Reference to sclk out pin */
 248:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const sclk_out_pin_config;/**< Reference to shift clock pin confi
 249:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const slave_select_pin[8];      /**< Reference to slave select pin */
 250:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const slave_select_pin_config[8]; /**< Reference to slave select 
 251:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler tx_cbhandler;            /**< callback handler for end of transmission
 252:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler rx_cbhandler;            /**< callback handler for end of reception */
 253:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler parity_cbhandler;        /**< callback handler for end of parity error
 254:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   /* FIFO configuration */
 255:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t tx_fifo_size;               /**< Number of FIFO entries assigned to the t
 256:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t rx_fifo_size;               /**< Number of FIFO entries assigned to the r
 257:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 258:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Clock Settings */
 259:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t shift_clk_passive_level; /**< Baudrate Generator shift
 260:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t transmit_mode;           /**< Indicates how the transmit mode is being
 261:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t receive_mode;            /**< Indicates how the receive mode is being 
 262:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_MODE_t  spi_master_config_mode;          /**< Defines the SPI transmit mode being used
 263:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t slave_select_lines;                         /**< Number of slave select lines being used 
 264:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t leading_trailing_delay;                     /**< Delay before and after each frame in ter
 265:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t tx_sr;                           /**< Service request number assigned to trans
 266:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t rx_sr;                           /**< Service request number assigned to recei
 267:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t parity_sr;                       /**< Service request number assigned to recei
 268:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_CONFIG_t;
 269:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 270:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 271:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Structure to hold the dynamic variables for the SPI_MASTER communication.
 272:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 273:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_RUNTIME
 274:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 275:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t word_length;                              /**< Indicates the length of the data word */
 276:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t tx_data_count;                            /**< Number of bytes of data to be transmitted
 277:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t tx_data_index;                   /**< Index to the byte to be transmitted next 
 278:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           buffer */
 279:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t rx_data_count;                            /**< Number of bytes of data to be received*/
 280:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t rx_data_index;                   /**< Indicates the number of bytes currently a
 281:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           rx_data buffer */
 282:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* rx_data;                                  /**< Pointer to the receive data buffer*/
 283:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* tx_data;                                  /**< Pointer to the transmit data buffer*/
 284:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile XMC_SPI_CH_MODE_t  spi_master_mode;       /**< Defines the SPI transmit mode being used 
 285:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input;                      /**< DX0 input channel used for Rx input, This
 286:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to full duplex mode */
 287:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input_half_duplex;          /**< DX0 input channel used for Rx input, This
 288:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to half duplex mode */
 289:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_busy;                            /**< Status flag to indicate busy when a recep
 290:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_busy;                            /**< Status flag to indicate busy when a trans
 291:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_data_dummy;                      /**< Status flag to indicate, dummy data is be
 292:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_data_dummy;                      /**< Status flag to indicate, receive data has
 293:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           not */
 294:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  } SPI_MASTER_RUNTIME_t;
 295:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 296:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 297:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 298:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialization parameters of SPI_MASTER APP
 299:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 300:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER
 301:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 302:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_t* const channel; /**< Reference to SPI channel */
 303:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_CONFIG_t * const config; /**< Reference to the SPI_MASTER configuration structur
 304:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_RUNTIME_t * const runtime;  /**< Reference to SPI_MASTER dynamic configuration structu
 305:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if ((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 306:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma;
 307:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 308:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 309:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_tx_config; /**< Reference to the DMA configuration struc
 310:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 311:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 312:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_rx_config; /**< Reference to the DMA configuration struc
 313:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma_rx;
 314:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_rx_number;
 315:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 316:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 317:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_tx_number;
 318:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 319:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_t;
 320:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 321:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 322:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 323:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 324:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 325:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** * API Prototypes
 326:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 327:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #ifdef __cplusplus
 328:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** extern "C" {
 329:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 330:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 331:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_apidoc
 332:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 333:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 334:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 335:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Get SPI_MASTER APP version
 336:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 337:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 338:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 339:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function can be used to check application software compatibility with a
 340:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * specific version of the APP.
 341:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 342:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 343:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 344:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 345:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 346:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 347:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 348:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_APP_VERSION_t app_version;
 349:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 350:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 351:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 352:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   app_version = SPI_MASTER_GetAppVersion();
 353:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 354:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if (app_version.major != 4U)
 355:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 356:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     // Probably, not the right version.
 357:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 358:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 359:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   while(1U)
 360:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 361:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 362:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   return 1;
 363:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 364:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 365:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 366:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** DAVE_APP_VERSION_t SPI_MASTER_GetAppVersion(void);
 367:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 368:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 369:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialize the SPI channel as per the configuration made in GUI.
 370:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 371:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return SPI_MASTER_STATUS_t: Status of SPI_MASTER driver initialization.\n
 372:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_SUCCESS - on successful initialization.\n
 373:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_FAILURE - if initialization fails.\n
 374:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 375:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 376:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Initializes IO pins used for the SPI_MASTER communication and configures USIC registers based on
 377:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * provided in the GUI. Calculates divider values PDIV and STEP for a precise baudrate. It also ena
 378:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt flags and service request values.
 379:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 380:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 381:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 382:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 383:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 384:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 385:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  int main(void)
 386:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  {
 387:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    DAVE_STATUS_t status;
 388:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 389:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 390:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 391:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(status == DAVE_STATUS_SUCCESS)
 392:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 393:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *        while(1U)
 394:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *        {
 395:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *        }
 396:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 397:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    else
 398:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 399:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 400:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 401:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 402:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 403:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 404:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     return 1U;
 405:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 406:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 407:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 408:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Init(SPI_MASTER_t* const handle);
 409:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 410:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 411:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the communication mode along with required port configuration.
 412:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 413:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 414:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param mode SPI working mode
 415:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 416:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 417:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of settings are successful\n
 418:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if mode is not supported by the selected pins\n
 419:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with transmit or receive operation\
 420:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 421:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 422:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 423:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * To change the mode of communication, it is advised to generate the code in Quad/Dual mode initia
 424:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the mode will be taken care by the APP.
 425:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <ul>
 426:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Quad mode, it is possible to change to other modes like Dual, Half 
 427:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Dual mode, it is possible to change to other modes like Half Duplex
 428:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for full-duplex mode, it is possible to change to Half Duplex only </li
 429:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * </ul>
 430:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * 
 431:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 432:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 433:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 434:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 435:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 436:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 437:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 438:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Precondition:
 439:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Configure the SPI_MASTER APP operation mode as 'Quad SPI'.
 440:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 441:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master device mode to Full duplex mode and starts sending 
 442:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 443:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 444:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 445:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 446:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 447:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 448:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 449:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 450:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 451:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 452:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 453:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 454:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    spi_status = SPI_MASTER_SetMode(&SPI_MASTER_0, XMC_SPI_CH_MODE_STANDARD);
 455:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 456:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 457:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 458:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 459:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 460:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 461:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 462:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 463:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 464:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 465:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 466:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 467:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 468:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 469:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 470:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 471:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 472:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetMode(SPI_MASTER_t* const handle, const XMC_SPI_CH_MODE_t mode);
 473:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 474:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 475:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the required baud rate during runtime.
 476:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 477:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 478:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param baud_rate required baud rate
 479:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 480:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 481:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of baud rate is successful\n
 482:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if updation is failed\n
 483:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with other operation\n
 484:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 485:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 486:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 487:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * While setting the baud rate to avoid noise of the port pins, all the pins are changed to input. 
 488:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * required baud again ports are initialised with the configured settings.
 489:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 490:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 491:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 492:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 493:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 494:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 495:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 496:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 497:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master baud rate to 9600 and starts sending the data store
 498:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 499:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 500:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 501:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 502:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 503:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 504:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 505:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint32_t baud_rate;
 506:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 507:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 508:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 509:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 510:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     baud_rate = 9600U;
 511:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 512:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     spi_status = SPI_MASTER_SetBaudRate(&SPI_MASTER_0, baud_rate);
 513:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 514:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 515:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 516:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 517:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 518:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 519:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 520:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 521:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 522:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 523:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 524:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 525:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 526:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 527:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 528:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 529:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 530:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetBaudRate(SPI_MASTER_t* const handle, const uint32_t baud_rate);
 531:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 532:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 533:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 534:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 535:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 536:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 537:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 538:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 539:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 540:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 541:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 542:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 543:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 544:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 545:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** * Transmits data using the SPI channel as a master device. Transmission is accomplished using the t
 546:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * as configured in the UI.<br>
 547:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 548:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure
 549:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 550:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 1.
 551:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * So the transmit interrupt will be generated when all the data in FIFO is moved out of FIFO.
 552:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * The APP handle's runtime structure is used to store the data pointer, count, data index
 553:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * and status of transmission. This function only registers a data transmission request if
 554:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * there is no active transmission in progress. Actual data transmission happens in the transmit
 555:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt service routine. A trigger is generated for the transmit interrupt to start loading
 556:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data to the transmit buffer. If transmit FIFO is configured, the data is filled into the FIF
 557:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmit interrupt will be generated subsequently when the transmit FIFO is empty. At this
 558:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * point of time, if there is some more data to be transmitted, it is loaded to the FIFO again.
 559:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * When FIFO is not enabled, data is transmitted one byte at a time. On transmission of each byte
 560:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 561:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 562:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 563:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 564:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the completion of data transmission or use SPI_MASTER_IsTxBusy() API.<br>
 565:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 566:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. A DMA channel is configured to p
 567:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * data to the SPI channel transmit buffer. This removes the load off the CPU. This API will only c
 568:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * and enable the DMA channel by specifying the data buffer and count of bytes to transmit. Rest is
 569:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * care without the CPU's intervention. User can configure a callback function in the APP UI. When 
 570:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * transmission is complete, the callback function will be executed. FIFO will not be used in DMA m
 571:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Receive start interrupt is configured for triggering the DMA channel. So each byte is transmitte
 572:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the background through the DMA channel.
 573:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * If the callback function is not configured, \a handle->runtime->tx_busy flag can be checked to
 574:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * verify if the transmission is complete.
 575:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct:</b><br>
 576:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be transmitted using polling method. Status flags are used to check if data can be tra
 577:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is tr
 578:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 579:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 580:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 581:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 582:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 583:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 584:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 585:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
 586:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 587:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 588:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 589:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 590:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 591:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 592:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 593:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 594:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 595:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 596:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 597:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
 598:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 599:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 600:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 601:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 602:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 603:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 604:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 605:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 606:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 607:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 608:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 609:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 610:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 611:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 612:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 613:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 614:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 615:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 616:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transmit(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_
 617:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 618:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 619:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 620:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 621:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 622:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 623:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 624:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 625:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 626:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 627:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 628:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 629:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 630:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received from the SPI slave synchronously. After the requested number of data bytes
 631:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 632:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data reception is accomplished using the receive mode selected in the UI.
 633:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 634:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Based on the UI configuration, either standard receive buffer(RBUF) or receive FIFO(OUT) is used
 635:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * for data reception. An interrupt is configured for reading received data from the bus. This func
 636:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * only registers a request to receive a number of data bytes from a USIC channel. If FIFO is
 637:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for reception, the FIFO limit is dynamically configured to optimally utilize the
 638:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * CPU load. Before starting data reception, the receive buffers are flushed. So only those data, r
 639:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 640:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 641:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 642:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 643:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 644:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 645:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 646:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 647:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. In this mode, a DMA channel is
 648:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for receiving data from standard receive buffer(RBUF) to the user buffer. By calling
 649:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * this API, the DMA channel destination address is configured to the user buffer and the channel i
 650:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * enabled. Receive FIFO will not be used when the receive mode is DMA.
 651:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Before starting data reception, the receive buffers are flushed. So only those data, received
 652:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 653:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 654:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 655:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 656:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 657:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 658:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 659:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct</b><br>
 660:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * In Direct receive mode, neither interrupt nor DMA is used. The API polls
 661:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the receive flag to read the received data and waits for all the requested number of bytes to
 662:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * be received. Based on FIFO configuration, either RBUF or OUT register is used for reading receiv
 663:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * data. Before starting data reception, the receive buffers are flushed. So only those data, recei
 664:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 665:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is re
 666:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 667:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 668:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 669:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 670:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 671:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 672:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 673:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 674:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
 675:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 676:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 677:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 678:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 679:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 680:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 681:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 682:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 683:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 684:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
 685:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 686:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 687:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 688:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 689:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 690:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 691:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 692:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 693:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 694:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 695:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 696:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 697:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 698:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 699:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 700:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 701:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 702:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Receive(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_t
 703:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 704:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 705:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits and Receives the specified number of data words and execute the receive callbac
 706:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *        in GUI.
 707:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 708:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 709:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param tx_dataptr Pointer to data buffer which has to be send
 710:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param rx_dataptr Pointer to data buffer where the received data has to be stored.
 711:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read and write
 712:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 713:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 714:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS   : if transfer of data is successful\n
 715:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE   : if transfer of data is failed (or) in other than standard
 716:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if passed buffers are NULL pointers (or) length of d
 717:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 718:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 719:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmits and receives data simultaneously using the SPI channel as a master device. API is appl
 720:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Full duplex</> operation mode. Data transfer happens based on the individual modes configured
 721:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception.<br>
 722:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Two data pins MOSI and MISO will be used for receiving and transmitting data respectively. A cal
 723:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured to execute after completing the transfer when 'Interrupt' or 'DMA' mode is used. The 
 724:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * should be configured for <i>End of receive/transfer callback</i> in the 'Interrupt Settings' tab
 725:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed when the last word of data is received.
 726:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 727:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 728:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 729:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 730:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 731:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 732:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 733:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 734:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition: Operation mode should be 'Full Duplex"
 735:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 736:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits and Receives 10 bytes of data from slave in parallel.
 737:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 738:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 739:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 740:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 741:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 742:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t SendData[10] = {0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA};
 743:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 744:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 745:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 746:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 747:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 748:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transfer(&SPI_MASTER_0, SendData, ReadData, 10);
 749:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 750:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 751:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 752:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 753:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 754:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 755:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 756:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 757:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 758:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 759:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 760:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 761:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transfer(const SPI_MASTER_t *const handle,
 762:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* tx_dataptr,
 763:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* rx_dataptr,
 764:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint32_t count);
 765:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 766:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 767:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 768:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 769:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 770:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 771:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 772:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 773:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 774:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 775:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 776:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 777:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH if receive mode is DMA.
 778:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 779:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 780:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * After receiving the specified number of words (word length configured), the user configured call
 781:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * is executed, if it is enabled. If a callback function is not configured on the APP UI, the user 
 782:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the status of rx_busy variable of the APP handle structure. Based on the UI configuration, eithe
 783:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * buffer or receive FIFO is used for data reception. An interrupt is configured for received data 
 784:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * function only registers a request to receive a number of data bytes from a SPI channel. If FIFO 
 785:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.
 786:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_irq_flow_chart">Click her
 787:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 788:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 789:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 790:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 791:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 792:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 793:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 794:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 795:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 796:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 797:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 798:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 799:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 800:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 801:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 802:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 803:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartReceiveIRQ(&SPI_MASTER_0, ReadData, 10U))
 804:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 805:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 806:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 807:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 808:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, ReadData, 10U);
 809:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 810:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 811:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 812:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 813:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 814:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 815:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 816:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 817:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 818:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 819:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 820:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 821:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 822:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveIRQ(const SPI_MASTER_t *const handle, uint8_t* dataptr, 
 823:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 824:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 825:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 826:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 827:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 828:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 829:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 830:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 831:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 832:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 833:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 834:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 835:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 836:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if the data_ptr is NULL or count is 0. \n
 837:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is DMA.
 838:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 839:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 840:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 841:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. After transmitting the total dat
 842:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * function is executed. If transmit FIFO is enabled, the trigger limit is set to 1. So the transmi
 843:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * generated when all the data in FIFO is moved from FIFO. The function uses APP handle's dynamic s
 844:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data pointer, count, data index and status of transmission. This function only registers a d
 845:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * request if there is no active transmission in progress. Actual data transmission happens in the 
 846:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * service routine. A trigger is generated for the transmit interrupt to start loading the data. If
 847:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured, the data is filled into the FIFO with trigger limit set to 1. Transmit interrupt wil
 848:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * when the transmit FIFO is empty. At this point of time, if there is some more data to be transmi
 849:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * to the FIFO again. When FIFO is not enabled, data is transmitted one byte at a time. On transmis
 850:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 851:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_irq_flow_chart">Click he
 852:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 853:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 854:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 855:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 856:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 857:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 858:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Pre-condition:
 859:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmit mode should be configured as "Interrupt".
 860:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 861:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" data to slave.
 862:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 863:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 864:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 865:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 866:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 867:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 868:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 869:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 870:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 871:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 872:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartTransmitIRQ(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_ST
 873:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 874:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 875:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 876:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 877:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 878:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 879:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 880:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 881:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 882:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 883:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 884:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 885:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 886:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 887:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 888:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 889:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 890:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 891:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitIRQ(const SPI_MASTER_t *const handle, uint8_t *addr, ui
 892:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 893:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 894:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 895:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 896:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 897:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for receiving data over SPI_MASTER channel using DMA.
 898:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 899:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 900:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  Pointer to SPI_MASTER_t handle structure
 901:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param data_ptr  Pointer to data of type uint8_t.
 902:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count  Total no of bytes to be received.\n
 903:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                \b Range: minimum= 1, maximum= 4096.
 904:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 905:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status for receive request.\n
 906:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 907:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a reception is in progress.\n
 908:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is
 909:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if receive mode is Interrupt \n
 910:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 911:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 912:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 913:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received,
 914:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 915:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 916:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 917:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 918:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 919:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 920:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 921:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * A maximum of 4096 bytes can be received in one API call. This limit is because of the DMA single
 922:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_dma_flow_chart">Click her
 923:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 924:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 925:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 926:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 927:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 928:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 929:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre condition:
 930:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Receive mode should be configured to "DMA"
 931:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Receive 10 bytes from slave.
 932:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 933:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 934:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
 935:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 936:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
 937:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t ReadData[10];
 938:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 939:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
 940:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
 941:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 942:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartReceiveDMA(&SPI_MASTER_0, ReadData, 10) == SPI_MASTER_STATUS_SUCCESS)
 943:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 944:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->rx_busy)
 945:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
 946:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
 947:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 948:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 949:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
 950:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 951:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 952:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
 953:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
 954:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
 955:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 956:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
 957:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
 958:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 959:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 960:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 961:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveDMA(const SPI_MASTER_t  *const handle, uint8_t *addr, ui
 962:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 963:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
 964:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 965:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 966:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for transmitting data over SPI_MASTER channel using DMA.
 967:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 968:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  SPI_MASTER APP handle pointer of type @ref SPI_MASTER_t
 969:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  data_ptr Pointer to data of type uint8_t.
 970:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count Total number of words to be transmitted.\n
 971:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \b Range: minimum= 1, maximum= 4096.
 972:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 973:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status of transmit request.\n
 974:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 975:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a transmission is in progress.\n
 976:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER__STATUS_BUFFER_INVALID if the data_ptr is NULL or count i
 977:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is Interrupt \n
 978:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 979:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 980:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * request is registered.
 981:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 982:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 983:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 984:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * is fully transmitted, the callback function will be executed.
 985:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function uses APP handle's runtime structure to store the status of transmission.
 986:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 987:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * data transmission happens through DMA channel. A maximum of 4095 bytes can be transmitted in one
 988:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * is because of the DMA single block size. Callback function is executed when all the data bytes a
 989:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 990:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for the completion of data tran
 991:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 992:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * multiple calls to this API.
 993:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_dma_flow_chart">Click he
 994:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 995:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 996:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 997:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 998:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 999:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre-condition:
1000:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Transmit mode should be configured as "DMA".
1001:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Transmits "Infineon" data to the slave
1002:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1003:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1004:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
1005:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1006:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
1007:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t Send_Data[] = "Infineon";
1008:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1009:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
1010:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
1011:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1012:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartTransmitDMA(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_
1013:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1014:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->tx_busy)
1015:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
1016:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
1017:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1018:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1019:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
1020:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1021:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1022:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
1023:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
1024:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
1025:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1026:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
1027:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
1028:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode
1029:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1030:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1031:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitDMA(const SPI_MASTER_t *const handle, uint8_t *addr, ui
1032:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
1033:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
1034:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1035:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Returns the state of the specified interrupt flag.
1036:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1037:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1038:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag Interrupt for which status is required
1039:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1040:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  uint32_t status of the interrupt
1041:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1042:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1043:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1044:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Returns the status of the events, by reading PSR register. This indicates the status of the all 
1045:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI communication.
1046:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1047:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1048:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1049:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1050:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1051:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1052:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1053:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1054:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not.
1055:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1056:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1057:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1058:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1059:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1060:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1061:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1062:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1063:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1064:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1065:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1066:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1067:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1068:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1069:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1070:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1071:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1072:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1073:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1074:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1075:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1076:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1077:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1078:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1079:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
1080:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE uint32_t SPI_MASTER_GetFlagStatus(const SPI_MASTER_t* handle, const uint32_t flag)
1081:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 343              	 .loc 4 1081 0
 344              	 .cfi_startproc
 345              	 
 346              	 
 347 0000 80B5     	 push {r7,lr}
 348              	.LCFI39:
 349              	 .cfi_def_cfa_offset 8
 350              	 .cfi_offset 7,-8
 351              	 .cfi_offset 14,-4
 352 0002 82B0     	 sub sp,sp,#8
 353              	.LCFI40:
 354              	 .cfi_def_cfa_offset 16
 355 0004 00AF     	 add r7,sp,#0
 356              	.LCFI41:
 357              	 .cfi_def_cfa_register 7
 358 0006 7860     	 str r0,[r7,#4]
 359 0008 3960     	 str r1,[r7]
1082:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_GetFlagStatus:handle NULL" , (handle != NULL));
1083:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   return (XMC_SPI_CH_GetStatusFlag(handle->channel) & flag);
 360              	 .loc 4 1083 0
 361 000a 7B68     	 ldr r3,[r7,#4]
 362 000c 1B68     	 ldr r3,[r3]
 363 000e 1846     	 mov r0,r3
 364 0010 FFF7FEFF 	 bl XMC_SPI_CH_GetStatusFlag
 365 0014 0246     	 mov r2,r0
 366 0016 3B68     	 ldr r3,[r7]
 367 0018 1340     	 ands r3,r3,r2
1084:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** }
 368              	 .loc 4 1084 0
 369 001a 1846     	 mov r0,r3
 370 001c 0837     	 adds r7,r7,#8
 371              	.LCFI42:
 372              	 .cfi_def_cfa_offset 8
 373 001e BD46     	 mov sp,r7
 374              	.LCFI43:
 375              	 .cfi_def_cfa_register 13
 376              	 
 377 0020 80BD     	 pop {r7,pc}
 378              	 .cfi_endproc
 379              	.LFE344:
 381 0022 00BF     	 .section .text.SPI_MASTER_IsTxBusy,"ax",%progbits
 382              	 .align 2
 383              	 .thumb
 384              	 .thumb_func
 386              	SPI_MASTER_IsTxBusy:
 387              	.LFB346:
1085:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
1086:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1087:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Clears the status of the specified interrupt flags.
1088:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1089:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1090:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag_mask Interrupt for which status has to be cleared
1091:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1092:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1093:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1094:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * During communication the events occurred has to be cleared to get the successive events.\n
1095:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
1096:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * to be cleared after transmission of each data word. Otherwise next event is not considered as va
1097:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1098:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1099:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1100:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1101:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1102:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1103:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1104:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1105:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not, and clears the flag.
1106:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1107:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1108:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1109:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1110:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1111:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1112:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1113:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1114:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1115:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1116:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIF
1117:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_ClearFlag(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1118:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1119:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1120:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1121:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1122:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1123:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1124:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1125:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1126:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1127:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1128:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1129:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1130:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_ClearFlag(const SPI_MASTER_t* handle, const uint32_t flag_mask)
1131:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
1132:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_ClearFlag:handle NULL" , (handle != NULL));
1133:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, flag_mask);
1134:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** }
1135:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** 
1136:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1137:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief return the txbusy flag state
1138:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1139:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return bool : status of txbusy flag
1140:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1141:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1142:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1143:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * This is used to check whether any transmit process is going or not. If no process is going then 
1144:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * the new request is accepted. SPI_MASTER_AbortTransmit() can be used to stop the current process 
1145:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * start the new request.
1146:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1147:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1148:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1149:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1150:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1151:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1152:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1153:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1154:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
1155:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1156:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1157:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1158:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1159:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1160:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1161:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1162:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1163:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1164:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1165:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1166:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
1167:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1168:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_IsTxBusy(&SPI_MASTER_0))
1169:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1170:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1171:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1172:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1173:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1174:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1175:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1176:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1177:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1178:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1179:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1180:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1181:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1182:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
1183:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1184:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1185:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE bool SPI_MASTER_IsTxBusy(const SPI_MASTER_t* const handle)
1186:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** {
 388              	 .loc 4 1186 0
 389              	 .cfi_startproc
 390              	 
 391              	 
 392              	 
 393 0000 80B4     	 push {r7}
 394              	.LCFI44:
 395              	 .cfi_def_cfa_offset 4
 396              	 .cfi_offset 7,-4
 397 0002 83B0     	 sub sp,sp,#12
 398              	.LCFI45:
 399              	 .cfi_def_cfa_offset 16
 400 0004 00AF     	 add r7,sp,#0
 401              	.LCFI46:
 402              	 .cfi_def_cfa_register 7
 403 0006 7860     	 str r0,[r7,#4]
1187:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_IsTxBusy:handle NULL", (handle != NULL))
1188:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h ****   return (handle->runtime->tx_busy);
 404              	 .loc 4 1188 0
 405 0008 7B68     	 ldr r3,[r7,#4]
 406 000a 9B68     	 ldr r3,[r3,#8]
 407 000c 93F82030 	 ldrb r3,[r3,#32]
 408 0010 DBB2     	 uxtb r3,r3
1189:C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER\spi_master.h **** }
 409              	 .loc 4 1189 0
 410 0012 1846     	 mov r0,r3
 411 0014 0C37     	 adds r7,r7,#12
 412              	.LCFI47:
 413              	 .cfi_def_cfa_offset 4
 414 0016 BD46     	 mov sp,r7
 415              	.LCFI48:
 416              	 .cfi_def_cfa_register 13
 417              	 
 418 0018 5DF8047B 	 ldr r7,[sp],#4
 419              	.LCFI49:
 420              	 .cfi_restore 7
 421              	 .cfi_def_cfa_offset 0
 422 001c 7047     	 bx lr
 423              	 .cfi_endproc
 424              	.LFE346:
 426              	 .global Bit0
 427 001e 00BF     	 .section .rodata.Bit0,"a",%progbits
 430              	Bit0:
 431 0000 01       	 .byte 1
 432              	 .global Bit1
 433              	 .section .rodata.Bit1,"a",%progbits
 436              	Bit1:
 437 0000 02       	 .byte 2
 438              	 .global Bit2
 439              	 .section .rodata.Bit2,"a",%progbits
 442              	Bit2:
 443 0000 04       	 .byte 4
 444              	 .global Bit3
 445              	 .section .rodata.Bit3,"a",%progbits
 448              	Bit3:
 449 0000 08       	 .byte 8
 450              	 .global Bit4
 451              	 .section .rodata.Bit4,"a",%progbits
 454              	Bit4:
 455 0000 10       	 .byte 16
 456              	 .global Bit5
 457              	 .section .rodata.Bit5,"a",%progbits
 460              	Bit5:
 461 0000 20       	 .byte 32
 462              	 .global Bit6
 463              	 .section .rodata.Bit6,"a",%progbits
 466              	Bit6:
 467 0000 40       	 .byte 64
 468              	 .global Bit7
 469              	 .section .rodata.Bit7,"a",%progbits
 472              	Bit7:
 473 0000 80       	 .byte -128
 474              	 .global PWR_MGMT0
 475              	 .section .rodata.PWR_MGMT0,"a",%progbits
 478              	PWR_MGMT0:
 479 0000 4E       	 .byte 78
 480              	 .global DEVICE_CONFIG
 481              	 .section .rodata.DEVICE_CONFIG,"a",%progbits
 484              	DEVICE_CONFIG:
 485 0000 11       	 .byte 17
 486              	 .global SENSOR_CONFIG0
 487              	 .section .rodata.SENSOR_CONFIG0,"a",%progbits
 490              	SENSOR_CONFIG0:
 491 0000 03       	 .byte 3
 492              	 .global WHO_AM_I
 493              	 .section .rodata.WHO_AM_I,"a",%progbits
 496              	WHO_AM_I:
 497 0000 75       	 .byte 117
 498              	 .global TEMP_DATA1
 499              	 .section .rodata.TEMP_DATA1,"a",%progbits
 502              	TEMP_DATA1:
 503 0000 1D       	 .byte 29
 504              	 .global TEMP_DATA
 505              	 .section .rodata.TEMP_DATA,"a",%progbits
 508              	TEMP_DATA:
 509 0000 1E       	 .byte 30
 510              	 .global ACCEL_CONFIG0
 511              	 .section .rodata.ACCEL_CONFIG0,"a",%progbits
 514              	ACCEL_CONFIG0:
 515 0000 50       	 .byte 80
 516              	 .global ACCEL_DATA_X1
 517              	 .section .rodata.ACCEL_DATA_X1,"a",%progbits
 520              	ACCEL_DATA_X1:
 521 0000 1F       	 .byte 31
 522              	 .global ACCEL_DATA_X0
 523              	 .section .rodata.ACCEL_DATA_X0,"a",%progbits
 526              	ACCEL_DATA_X0:
 527 0000 20       	 .byte 32
 528              	 .global ACCEL_DATA_Y1
 529              	 .section .rodata.ACCEL_DATA_Y1,"a",%progbits
 532              	ACCEL_DATA_Y1:
 533 0000 21       	 .byte 33
 534              	 .global ACCEL_DATA_Y0
 535              	 .section .rodata.ACCEL_DATA_Y0,"a",%progbits
 538              	ACCEL_DATA_Y0:
 539 0000 22       	 .byte 34
 540              	 .global ACCEL_DATA_Z1
 541              	 .section .rodata.ACCEL_DATA_Z1,"a",%progbits
 544              	ACCEL_DATA_Z1:
 545 0000 23       	 .byte 35
 546              	 .global ACCEL_DATA_Z0
 547              	 .section .rodata.ACCEL_DATA_Z0,"a",%progbits
 550              	ACCEL_DATA_Z0:
 551 0000 24       	 .byte 36
 552              	 .global _16_G
 553              	 .section .rodata._16_G,"a",%progbits
 556              	_16_G:
 557 0000 00       	 .space 1
 558              	 .global _8_G
 559              	 .section .rodata._8_G,"a",%progbits
 562              	_8_G:
 563 0000 20       	 .byte 32
 564              	 .global _4_G
 565              	 .section .rodata._4_G,"a",%progbits
 568              	_4_G:
 569 0000 40       	 .byte 64
 570              	 .global _2_G
 571              	 .section .rodata._2_G,"a",%progbits
 574              	_2_G:
 575 0000 60       	 .byte 96
 576              	 .global GYRO_CONFIG0
 577              	 .section .rodata.GYRO_CONFIG0,"a",%progbits
 580              	GYRO_CONFIG0:
 581 0000 4F       	 .byte 79
 582              	 .global GYRO_DATA_X1
 583              	 .section .rodata.GYRO_DATA_X1,"a",%progbits
 586              	GYRO_DATA_X1:
 587 0000 25       	 .byte 37
 588              	 .global GYRO_DATA_X0
 589              	 .section .rodata.GYRO_DATA_X0,"a",%progbits
 592              	GYRO_DATA_X0:
 593 0000 26       	 .byte 38
 594              	 .global GYRO_DATA_Y1
 595              	 .section .rodata.GYRO_DATA_Y1,"a",%progbits
 598              	GYRO_DATA_Y1:
 599 0000 27       	 .byte 39
 600              	 .global GYRO_DATA_Y0
 601              	 .section .rodata.GYRO_DATA_Y0,"a",%progbits
 604              	GYRO_DATA_Y0:
 605 0000 28       	 .byte 40
 606              	 .global GYRO_DATA_Z1
 607              	 .section .rodata.GYRO_DATA_Z1,"a",%progbits
 610              	GYRO_DATA_Z1:
 611 0000 29       	 .byte 41
 612              	 .global GYRO_DATA_Z0
 613              	 .section .rodata.GYRO_DATA_Z0,"a",%progbits
 616              	GYRO_DATA_Z0:
 617 0000 2A       	 .byte 42
 618              	 .global _2000_DPS
 619              	 .section .rodata._2000_DPS,"a",%progbits
 622              	_2000_DPS:
 623 0000 00       	 .space 1
 624              	 .global _1000_DPS
 625              	 .section .rodata._1000_DPS,"a",%progbits
 628              	_1000_DPS:
 629 0000 20       	 .byte 32
 630              	 .global _500_DPS
 631              	 .section .rodata._500_DPS,"a",%progbits
 634              	_500_DPS:
 635 0000 40       	 .byte 64
 636              	 .global _250_DPS
 637              	 .section .rodata._250_DPS,"a",%progbits
 640              	_250_DPS:
 641 0000 60       	 .byte 96
 642              	 .global _125_DPS
 643              	 .section .rodata._125_DPS,"a",%progbits
 646              	_125_DPS:
 647 0000 80       	 .byte -128
 648              	 .global _65_5_DPS
 649              	 .section .rodata._65_5_DPS,"a",%progbits
 652              	_65_5_DPS:
 653 0000 A0       	 .byte -96
 654              	 .global _31_25_DPS
 655              	 .section .rodata._31_25_DPS,"a",%progbits
 658              	_31_25_DPS:
 659 0000 C0       	 .byte -64
 660              	 .global _15_625_DPS
 661              	 .section .rodata._15_625_DPS,"a",%progbits
 664              	_15_625_DPS:
 665 0000 E0       	 .byte -32
 666              	 .global _32_kHz
 667              	 .section .rodata._32_kHz,"a",%progbits
 670              	_32_kHz:
 671 0000 01       	 .byte 1
 672              	 .global _16_kHz
 673              	 .section .rodata._16_kHz,"a",%progbits
 676              	_16_kHz:
 677 0000 02       	 .byte 2
 678              	 .global _8_kHz
 679              	 .section .rodata._8_kHz,"a",%progbits
 682              	_8_kHz:
 683 0000 03       	 .byte 3
 684              	 .global _4_kHz
 685              	 .section .rodata._4_kHz,"a",%progbits
 688              	_4_kHz:
 689 0000 04       	 .byte 4
 690              	 .global _2_kHz
 691              	 .section .rodata._2_kHz,"a",%progbits
 694              	_2_kHz:
 695 0000 05       	 .byte 5
 696              	 .global _1_kHz
 697              	 .section .rodata._1_kHz,"a",%progbits
 700              	_1_kHz:
 701 0000 06       	 .byte 6
 702              	 .global ACCEL_CONFIG1
 703              	 .section .rodata.ACCEL_CONFIG1,"a",%progbits
 706              	ACCEL_CONFIG1:
 707 0000 53       	 .byte 83
 708              	 .global GYRO_CONFIG1
 709              	 .section .rodata.GYRO_CONFIG1,"a",%progbits
 712              	GYRO_CONFIG1:
 713 0000 51       	 .byte 81
 714              	 .global GYRO_ACCEL_CONFIG0
 715              	 .section .rodata.GYRO_ACCEL_CONFIG0,"a",%progbits
 718              	GYRO_ACCEL_CONFIG0:
 719 0000 52       	 .byte 82
 720              	 .global bw0
 721              	 .section .rodata.bw0,"a",%progbits
 724              	bw0:
 725 0000 00       	 .space 1
 726              	 .global bw1
 727              	 .section .rodata.bw1,"a",%progbits
 730              	bw1:
 731 0000 11       	 .byte 17
 732              	 .global bw2
 733              	 .section .rodata.bw2,"a",%progbits
 736              	bw2:
 737 0000 22       	 .byte 34
 738              	 .global bw3
 739              	 .section .rodata.bw3,"a",%progbits
 742              	bw3:
 743 0000 33       	 .byte 51
 744              	 .global bw4
 745              	 .section .rodata.bw4,"a",%progbits
 748              	bw4:
 749 0000 44       	 .byte 68
 750              	 .global bw5
 751              	 .section .rodata.bw5,"a",%progbits
 754              	bw5:
 755 0000 55       	 .byte 85
 756              	 .global bw6
 757              	 .section .rodata.bw6,"a",%progbits
 760              	bw6:
 761 0000 66       	 .byte 102
 762              	 .global bw7
 763              	 .section .rodata.bw7,"a",%progbits
 766              	bw7:
 767 0000 77       	 .byte 119
 768              	 .section .rodata
 769              	 .align 2
 770              	.LC0:
 771 0000 53504900 	 .ascii "SPI\000"
 772              	 .section .text.main,"ax",%progbits
 773              	 .align 2
 774              	 .global main
 775              	 .thumb
 776              	 .thumb_func
 778              	main:
 779              	.LFB366:
 780              	 .file 5 "../main.c"
   1:../main.c     **** /*******************************************************************************
   2:../main.c     ****  This example contains a FREERTOS APP that comes with a modified GPL          **
   3:../main.c     ****  By using this examples you accept the license terms of the FREERTOS APP      **
   4:../main.c     ****  located in the help documentation of the FREERTOS APP.                       **
   5:../main.c     ****  FREERTOS APP can be downloaded from DAVE: -> Help -> Install DAVE APPs...    **
   6:../main.c     ****  then add the following link:                                                 **
   7:../main.c     ****  http://dave.infineon.com/Libraries/DAVE_Libs/Contributed/v4.0.0/             **
   8:../main.c     ****                                                                               **
   9:../main.c     ****  Copyright (c) 2015, Infineon Technologies AG                                 **
  10:../main.c     ****  All rights reserved.                                                         **
  11:../main.c     ****                                                                               **
  12:../main.c     ****  Redistribution and use in source and binary forms, with or without           **
  13:../main.c     ****  modification,are permitted provided that the following conditions are met:   **
  14:../main.c     ****                                                                               **
  15:../main.c     ****  *Redistributions of source code must retain the above copyright notice,      **
  16:../main.c     ****  this list of conditions and the following disclaimer.                        **
  17:../main.c     ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  18:../main.c     ****  this list of conditions and the following disclaimer in the documentation    **
  19:../main.c     ****  and/or other materials provided with the distribution.                       **
  20:../main.c     ****  *Neither the name of the copyright holders nor the names of its contributors **
  21:../main.c     ****  may be used to endorse or promote products derived from this software without**
  22:../main.c     ****  specific prior written permission.                                           **
  23:../main.c     ****                                                                               **
  24:../main.c     ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  25:../main.c     ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  26:../main.c     ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  27:../main.c     ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  28:../main.c     ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  29:../main.c     ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  30:../main.c     ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  31:../main.c     ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  32:../main.c     ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  33:../main.c     ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  34:../main.c     ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  35:../main.c     ****                                                                               **
  36:../main.c     ****  To improve the quality of the software, users are encouraged to share        **
  37:../main.c     ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  38:../main.c     ****  dave@infineon.com).                                                          **
  39:../main.c     ****                                                                               **
  40:../main.c     **** ********************************************************************************
  41:../main.c     **** **                                                                            **
  42:../main.c     **** **                                                                            **
  43:../main.c     **** ** PLATFORM : Infineon XMC4500 Series                                         **
  44:../main.c     **** **                                                                            **
  45:../main.c     **** ** AUTHOR : Application Engineering Team                                      **
  46:../main.c     **** **                                                                            **
  47:../main.c     **** ** version 4.0.0  Initial version                                             **
  48:../main.c     **** **         4.1.2  Modified for APP updates                                    **
  49:../main.c     **** **         4.1.4  Modified for APP updates									  **
  50:../main.c     **** **                                                                            **
  51:../main.c     **** ** MODIFICATION DATE : OCT, 30, 2015                                          **
  52:../main.c     **** **                                                                            **
  53:../main.c     **** *******************************************************************************/
  54:../main.c     **** 
  55:../main.c     **** 
  56:../main.c     **** /*
  57:../main.c     ****  * This is a very simple demo that demonstrates task and queue usages only.
  58:../main.c     ****  * Details of other FreeRTOS features (API functions, tracing features,
  59:../main.c     ****  * diagnostic hook functions, memory management, etc.) can be found on the
  60:../main.c     ****  * FreeRTOS web site (http://www.FreeRTOS.org) and in the FreeRTOS book.
  61:../main.c     ****  * Details of this demo (what it does, how it should behave, etc.) can be found
  62:../main.c     ****  * in the accompanying PDF application note.
  63:../main.c     ****  * http://interactive.freertos.org/attachments/token/rpjspilbw7qbvca/?name=FR-191-AN-RB-003i2-_A_si
  64:../main.c     ****  *
  65:../main.c     **** */
  66:../main.c     **** 
  67:../main.c     **** #include <DAVE.h>
  68:../main.c     **** 
  69:../main.c     **** #include "Dave/Generated/FREERTOS/task.h"
  70:../main.c     **** #include "Dave/Generated/FREERTOS/queue.h"
  71:../main.c     **** 
  72:../main.c     **** //#include "source/ICM-42688-P/ICM-42688-P.h"
  73:../main.c     **** #include "ICM-42688-P.h"
  74:../main.c     **** 
  75:../main.c     **** 
  76:../main.c     **** static void prvBlinkyTask( void *pvParameters );
  77:../main.c     **** static void prvSendSPI( void *pvParameters );
  78:../main.c     **** 
  79:../main.c     **** 
  80:../main.c     **** 
  81:../main.c     **** /*-----------------------------------------------------------*/
  82:../main.c     **** 
  83:../main.c     **** /**
  84:../main.c     ****  * @brief main() - Application entry point
  85:../main.c     ****  *
  86:../main.c     ****  * <b>Details of function</b><br>
  87:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  88:../main.c     ****  * invoking the App initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  89:../main.c     ****  * code.
  90:../main.c     ****  */
  91:../main.c     **** int main(void)
  92:../main.c     **** {
 781              	 .loc 5 92 0
 782              	 .cfi_startproc
 783              	 
 784              	 
 785 0000 80B5     	 push {r7,lr}
 786              	.LCFI50:
 787              	 .cfi_def_cfa_offset 8
 788              	 .cfi_offset 7,-8
 789              	 .cfi_offset 14,-4
 790 0002 82B0     	 sub sp,sp,#8
 791              	.LCFI51:
 792              	 .cfi_def_cfa_offset 16
 793 0004 02AF     	 add r7,sp,#8
 794              	.LCFI52:
 795              	 .cfi_def_cfa 7,8
  93:../main.c     **** 
  94:../main.c     ****   if(DAVE_Init() == DAVE_STATUS_FAILURE)
 796              	 .loc 5 94 0
 797 0006 FFF7FEFF 	 bl DAVE_Init
 798 000a 0346     	 mov r3,r0
 799 000c 012B     	 cmp r3,#1
 800 000e 00D1     	 bne .L14
 801              	.L15:
  95:../main.c     ****   {
  96:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  97:../main.c     ****     XMC_DEBUG(("DAVE APPs initialization failed with status\n"));
  98:../main.c     ****     while(1U)
  99:../main.c     ****     {
 100:../main.c     ****     }
 802              	 .loc 5 100 0 discriminator 1
 803 0010 FEE7     	 b .L15
 804              	.L14:
 101:../main.c     ****   }
 102:../main.c     **** 
 103:../main.c     **** 
 104:../main.c     **** 	/* Start the two tasks as described in the accompanying application
 105:../main.c     **** 	   note. */
 106:../main.c     **** 	//xTaskCreate (prvBlinkyTask, ( const char * const ) "Blinky", configMINIMAL_STACK_SIZE, NULL, tsk
 107:../main.c     **** 	xTaskCreate (prvSendSPI, ( const char * const ) "SPI", 1000, NULL, tskIDLE_PRIORITY + 2, NULL );
 805              	 .loc 5 107 0
 806 0012 0223     	 movs r3,#2
 807 0014 0093     	 str r3,[sp]
 808 0016 0023     	 movs r3,#0
 809 0018 0193     	 str r3,[sp,#4]
 810 001a 0548     	 ldr r0,.L17
 811 001c 0549     	 ldr r1,.L17+4
 812 001e 4FF47A72 	 mov r2,#1000
 813 0022 0023     	 movs r3,#0
 814 0024 FFF7FEFF 	 bl xTaskCreate
 108:../main.c     **** 
 109:../main.c     **** 
 110:../main.c     **** 	/* Start the tasks running. */
 111:../main.c     **** 	vTaskStartScheduler();
 815              	 .loc 5 111 0
 816 0028 FFF7FEFF 	 bl vTaskStartScheduler
 817              	.L16:
 112:../main.c     **** 
 113:../main.c     ****   while(1U)
 114:../main.c     ****   {
 115:../main.c     ****   }
 818              	 .loc 5 115 0 discriminator 2
 819 002c FEE7     	 b .L16
 820              	.L18:
 821 002e 00BF     	 .align 2
 822              	.L17:
 823 0030 00000000 	 .word prvSendSPI
 824 0034 00000000 	 .word .LC0
 825              	 .cfi_endproc
 826              	.LFE366:
 828              	 .section .text.imu_init,"ax",%progbits
 829              	 .align 2
 830              	 .global imu_init
 831              	 .thumb
 832              	 .thumb_func
 834              	imu_init:
 835              	.LFB367:
 116:../main.c     **** }
 117:../main.c     **** 
 118:../main.c     **** /*-----------------------------------------------------------*/
 119:../main.c     **** void imu_init(SPI_MASTER_t *SPI_MASTER_sel)
 120:../main.c     **** {
 836              	 .loc 5 120 0
 837              	 .cfi_startproc
 838              	 
 839              	 
 840 0000 80B5     	 push {r7,lr}
 841              	.LCFI53:
 842              	 .cfi_def_cfa_offset 8
 843              	 .cfi_offset 7,-8
 844              	 .cfi_offset 14,-4
 845 0002 84B0     	 sub sp,sp,#16
 846              	.LCFI54:
 847              	 .cfi_def_cfa_offset 24
 848 0004 00AF     	 add r7,sp,#0
 849              	.LCFI55:
 850              	 .cfi_def_cfa_register 7
 851 0006 7860     	 str r0,[r7,#4]
 121:../main.c     **** 	uint8_t SendData[2];
 122:../main.c     **** 
 123:../main.c     **** 	// Switch Register Bank
 124:../main.c     **** 	SendData[0] = 0x76;
 852              	 .loc 5 124 0
 853 0008 7623     	 movs r3,#118
 854 000a 3B72     	 strb r3,[r7,#8]
 125:../main.c     **** 	SendData[1]	= Bit1; //Register 2
 855              	 .loc 5 125 0
 856 000c 0223     	 movs r3,#2
 857 000e 7B72     	 strb r3,[r7,#9]
 126:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 858              	 .loc 5 126 0
 859 0010 07F10803 	 add r3,r7,#8
 860 0014 7868     	 ldr r0,[r7,#4]
 861 0016 1946     	 mov r1,r3
 862 0018 0222     	 movs r2,#2
 863 001a FFF7FEFF 	 bl SPI_MASTER_Transmit
 864 001e 0346     	 mov r3,r0
 865 0020 002B     	 cmp r3,#0
 866 0022 06D1     	 bne .L20
 127:../main.c     **** 		while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 867              	 .loc 5 127 0
 868 0024 00BF     	 nop
 869              	.L21:
 870              	 .loc 5 127 0 is_stmt 0 discriminator 1
 871 0026 7868     	 ldr r0,[r7,#4]
 872 0028 FFF7FEFF 	 bl SPI_MASTER_IsTxBusy
 873 002c 0346     	 mov r3,r0
 874 002e 002B     	 cmp r3,#0
 875 0030 F9D1     	 bne .L21
 876              	.L20:
 128:../main.c     **** 
 129:../main.c     **** 	// Accel AAF off
 130:../main.c     **** 	SendData[0] = 0x03;
 877              	 .loc 5 130 0 is_stmt 1
 878 0032 0323     	 movs r3,#3
 879 0034 3B72     	 strb r3,[r7,#8]
 131:../main.c     **** 	SendData[1]	= Bit0;
 880              	 .loc 5 131 0
 881 0036 0123     	 movs r3,#1
 882 0038 7B72     	 strb r3,[r7,#9]
 132:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 883              	 .loc 5 132 0
 884 003a 07F10803 	 add r3,r7,#8
 885 003e 7868     	 ldr r0,[r7,#4]
 886 0040 1946     	 mov r1,r3
 887 0042 0222     	 movs r2,#2
 888 0044 FFF7FEFF 	 bl SPI_MASTER_Transmit
 889 0048 0346     	 mov r3,r0
 890 004a 002B     	 cmp r3,#0
 891 004c 06D1     	 bne .L22
 133:../main.c     **** 		while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 892              	 .loc 5 133 0
 893 004e 00BF     	 nop
 894              	.L23:
 895              	 .loc 5 133 0 is_stmt 0 discriminator 1
 896 0050 7868     	 ldr r0,[r7,#4]
 897 0052 FFF7FEFF 	 bl SPI_MASTER_IsTxBusy
 898 0056 0346     	 mov r3,r0
 899 0058 002B     	 cmp r3,#0
 900 005a F9D1     	 bne .L23
 901              	.L22:
 134:../main.c     **** 
 135:../main.c     **** 	// Switch Register Bank
 136:../main.c     **** 	SendData[0] = 0x76;
 902              	 .loc 5 136 0 is_stmt 1
 903 005c 7623     	 movs r3,#118
 904 005e 3B72     	 strb r3,[r7,#8]
 137:../main.c     **** 	SendData[1]	= Bit0; //Register 1
 905              	 .loc 5 137 0
 906 0060 0123     	 movs r3,#1
 907 0062 7B72     	 strb r3,[r7,#9]
 138:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 908              	 .loc 5 138 0
 909 0064 07F10803 	 add r3,r7,#8
 910 0068 7868     	 ldr r0,[r7,#4]
 911 006a 1946     	 mov r1,r3
 912 006c 0222     	 movs r2,#2
 913 006e FFF7FEFF 	 bl SPI_MASTER_Transmit
 914 0072 0346     	 mov r3,r0
 915 0074 002B     	 cmp r3,#0
 916 0076 06D1     	 bne .L24
 139:../main.c     **** 		while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 917              	 .loc 5 139 0
 918 0078 00BF     	 nop
 919              	.L25:
 920              	 .loc 5 139 0 is_stmt 0 discriminator 1
 921 007a 7868     	 ldr r0,[r7,#4]
 922 007c FFF7FEFF 	 bl SPI_MASTER_IsTxBusy
 923 0080 0346     	 mov r3,r0
 924 0082 002B     	 cmp r3,#0
 925 0084 F9D1     	 bne .L25
 926              	.L24:
 140:../main.c     **** 
 141:../main.c     **** 	// Gyro Notch off; AAF off
 142:../main.c     **** 	SendData[0] = 0x0B;
 927              	 .loc 5 142 0 is_stmt 1
 928 0086 0B23     	 movs r3,#11
 929 0088 3B72     	 strb r3,[r7,#8]
 143:../main.c     **** 	SendData[1]	= Bit1 | Bit0;
 930              	 .loc 5 143 0
 931 008a 0222     	 movs r2,#2
 932 008c 0123     	 movs r3,#1
 933 008e 1343     	 orrs r3,r3,r2
 934 0090 DBB2     	 uxtb r3,r3
 935 0092 7B72     	 strb r3,[r7,#9]
 144:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 936              	 .loc 5 144 0
 937 0094 07F10803 	 add r3,r7,#8
 938 0098 7868     	 ldr r0,[r7,#4]
 939 009a 1946     	 mov r1,r3
 940 009c 0222     	 movs r2,#2
 941 009e FFF7FEFF 	 bl SPI_MASTER_Transmit
 942 00a2 0346     	 mov r3,r0
 943 00a4 002B     	 cmp r3,#0
 944 00a6 06D1     	 bne .L26
 145:../main.c     **** 		while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 945              	 .loc 5 145 0
 946 00a8 00BF     	 nop
 947              	.L27:
 948              	 .loc 5 145 0 is_stmt 0 discriminator 1
 949 00aa 7868     	 ldr r0,[r7,#4]
 950 00ac FFF7FEFF 	 bl SPI_MASTER_IsTxBusy
 951 00b0 0346     	 mov r3,r0
 952 00b2 002B     	 cmp r3,#0
 953 00b4 F9D1     	 bne .L27
 954              	.L26:
 146:../main.c     **** 
 147:../main.c     **** 	// Switch Register Bank
 148:../main.c     **** 	SendData[0] = 0x76;
 955              	 .loc 5 148 0 is_stmt 1
 956 00b6 7623     	 movs r3,#118
 957 00b8 3B72     	 strb r3,[r7,#8]
 149:../main.c     **** 	SendData[1]	= 0x00; //Register 0
 958              	 .loc 5 149 0
 959 00ba 0023     	 movs r3,#0
 960 00bc 7B72     	 strb r3,[r7,#9]
 150:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 961              	 .loc 5 150 0
 962 00be 07F10803 	 add r3,r7,#8
 963 00c2 7868     	 ldr r0,[r7,#4]
 964 00c4 1946     	 mov r1,r3
 965 00c6 0222     	 movs r2,#2
 966 00c8 FFF7FEFF 	 bl SPI_MASTER_Transmit
 967 00cc 0346     	 mov r3,r0
 968 00ce 002B     	 cmp r3,#0
 969 00d0 06D1     	 bne .L28
 151:../main.c     **** 		while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 970              	 .loc 5 151 0
 971 00d2 00BF     	 nop
 972              	.L29:
 973              	 .loc 5 151 0 is_stmt 0 discriminator 1
 974 00d4 7868     	 ldr r0,[r7,#4]
 975 00d6 FFF7FEFF 	 bl SPI_MASTER_IsTxBusy
 976 00da 0346     	 mov r3,r0
 977 00dc 002B     	 cmp r3,#0
 978 00de F9D1     	 bne .L29
 979              	.L28:
 152:../main.c     **** 
 153:../main.c     **** 	/*/ Set data ready reset mode //has to wait now sometimes
 154:../main.c     **** 	SendData[0] = 0x63;
 155:../main.c     **** 	SendData[1]	= 0b10100000; //Register 0
 156:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 157:../main.c     **** 		while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 158:../main.c     **** 		*/
 159:../main.c     **** 
 160:../main.c     **** 	/*/ Set interrupt times to 8us //No effect on spikes
 161:../main.c     **** 	SendData[0] = 0x64;
 162:../main.c     **** 	SendData[1]	= 0b11100000; //Register 0
 163:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 164:../main.c     **** 		while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 165:../main.c     **** 		*/
 166:../main.c     **** 
 167:../main.c     **** 
 168:../main.c     **** 	//// 7:6 Reserved | 5 TEMP_DIS | 4 IDLE | 3:2 GYRO_MODE | 1:0 ACCEL_MODE
 169:../main.c     **** 	uint8_t LN_Mode = Bit1 | Bit0;
 980              	 .loc 5 169 0 is_stmt 1
 981 00e0 0222     	 movs r2,#2
 982 00e2 0123     	 movs r3,#1
 983 00e4 1343     	 orrs r3,r3,r2
 984 00e6 FB72     	 strb r3,[r7,#11]
 170:../main.c     **** 	uint8_t pwr_config = (LN_Mode <<2) | (LN_Mode);
 985              	 .loc 5 170 0
 986 00e8 FB7A     	 ldrb r3,[r7,#11]
 987 00ea 9B00     	 lsls r3,r3,#2
 988 00ec DAB2     	 uxtb r2,r3
 989 00ee FB7A     	 ldrb r3,[r7,#11]
 990 00f0 1343     	 orrs r3,r3,r2
 991 00f2 DBB2     	 uxtb r3,r3
 992 00f4 BB72     	 strb r3,[r7,#10]
 171:../main.c     **** 	SendData[0] = PWR_MGMT0;
 993              	 .loc 5 171 0
 994 00f6 4E23     	 movs r3,#78
 995 00f8 3B72     	 strb r3,[r7,#8]
 172:../main.c     **** 	SendData[1] = pwr_config;
 996              	 .loc 5 172 0
 997 00fa BB7A     	 ldrb r3,[r7,#10]
 998 00fc 7B72     	 strb r3,[r7,#9]
 173:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 999              	 .loc 5 173 0
 1000 00fe 07F10803 	 add r3,r7,#8
 1001 0102 7868     	 ldr r0,[r7,#4]
 1002 0104 1946     	 mov r1,r3
 1003 0106 0222     	 movs r2,#2
 1004 0108 FFF7FEFF 	 bl SPI_MASTER_Transmit
 1005 010c 0346     	 mov r3,r0
 1006 010e 002B     	 cmp r3,#0
 1007 0110 06D1     	 bne .L30
 174:../main.c     **** 		while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 1008              	 .loc 5 174 0
 1009 0112 00BF     	 nop
 1010              	.L31:
 1011              	 .loc 5 174 0 is_stmt 0 discriminator 1
 1012 0114 7868     	 ldr r0,[r7,#4]
 1013 0116 FFF7FEFF 	 bl SPI_MASTER_IsTxBusy
 1014 011a 0346     	 mov r3,r0
 1015 011c 002B     	 cmp r3,#0
 1016 011e F9D1     	 bne .L31
 1017              	.L30:
 175:../main.c     **** 
 176:../main.c     **** 	int counter = 0;
 1018              	 .loc 5 176 0 is_stmt 1
 1019 0120 0023     	 movs r3,#0
 1020 0122 FB60     	 str r3,[r7,#12]
 177:../main.c     **** 	while(counter<3000000)
 1021              	 .loc 5 177 0
 1022 0124 02E0     	 b .L32
 1023              	.L33:
 178:../main.c     **** 	{
 179:../main.c     **** 		counter++;
 1024              	 .loc 5 179 0
 1025 0126 FB68     	 ldr r3,[r7,#12]
 1026 0128 0133     	 adds r3,r3,#1
 1027 012a FB60     	 str r3,[r7,#12]
 1028              	.L32:
 177:../main.c     **** 	while(counter<3000000)
 1029              	 .loc 5 177 0
 1030 012c FB68     	 ldr r3,[r7,#12]
 1031 012e 254A     	 ldr r2,.L42
 1032 0130 9342     	 cmp r3,r2
 1033 0132 F8DD     	 ble .L33
 180:../main.c     **** 	}
 181:../main.c     **** 
 182:../main.c     **** 
 183:../main.c     **** 	// 7:5 accelerometer output range | 3:0 output data rate
 184:../main.c     **** 	SendData[0] = ACCEL_CONFIG0;
 1034              	 .loc 5 184 0
 1035 0134 5023     	 movs r3,#80
 1036 0136 3B72     	 strb r3,[r7,#8]
 185:../main.c     **** 	SendData[1]	= _16_G | _32_kHz;
 1037              	 .loc 5 185 0
 1038 0138 0022     	 movs r2,#0
 1039 013a 0123     	 movs r3,#1
 1040 013c 1343     	 orrs r3,r3,r2
 1041 013e DBB2     	 uxtb r3,r3
 1042 0140 7B72     	 strb r3,[r7,#9]
 186:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 1043              	 .loc 5 186 0
 1044 0142 07F10803 	 add r3,r7,#8
 1045 0146 7868     	 ldr r0,[r7,#4]
 1046 0148 1946     	 mov r1,r3
 1047 014a 0222     	 movs r2,#2
 1048 014c FFF7FEFF 	 bl SPI_MASTER_Transmit
 1049 0150 0346     	 mov r3,r0
 1050 0152 002B     	 cmp r3,#0
 1051 0154 06D1     	 bne .L34
 187:../main.c     **** 		while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 1052              	 .loc 5 187 0
 1053 0156 00BF     	 nop
 1054              	.L35:
 1055              	 .loc 5 187 0 is_stmt 0 discriminator 1
 1056 0158 7868     	 ldr r0,[r7,#4]
 1057 015a FFF7FEFF 	 bl SPI_MASTER_IsTxBusy
 1058 015e 0346     	 mov r3,r0
 1059 0160 002B     	 cmp r3,#0
 1060 0162 F9D1     	 bne .L35
 1061              	.L34:
 188:../main.c     **** 
 189:../main.c     **** 	counter = 0;
 1062              	 .loc 5 189 0 is_stmt 1
 1063 0164 0023     	 movs r3,#0
 1064 0166 FB60     	 str r3,[r7,#12]
 190:../main.c     **** 	while(counter<3000000)
 1065              	 .loc 5 190 0
 1066 0168 02E0     	 b .L36
 1067              	.L37:
 191:../main.c     **** 	{
 192:../main.c     **** 		counter++;
 1068              	 .loc 5 192 0
 1069 016a FB68     	 ldr r3,[r7,#12]
 1070 016c 0133     	 adds r3,r3,#1
 1071 016e FB60     	 str r3,[r7,#12]
 1072              	.L36:
 190:../main.c     **** 	while(counter<3000000)
 1073              	 .loc 5 190 0
 1074 0170 FB68     	 ldr r3,[r7,#12]
 1075 0172 144A     	 ldr r2,.L42
 1076 0174 9342     	 cmp r3,r2
 1077 0176 F8DD     	 ble .L37
 193:../main.c     **** 	}
 194:../main.c     **** 
 195:../main.c     **** 	// 7:5 gyroscope output range | 3:0 output data rate
 196:../main.c     **** 	SendData[0] = GYRO_CONFIG0;
 1078              	 .loc 5 196 0
 1079 0178 4F23     	 movs r3,#79
 1080 017a 3B72     	 strb r3,[r7,#8]
 197:../main.c     **** 	SendData[1] = _125_DPS | _32_kHz;
 1081              	 .loc 5 197 0
 1082 017c 8022     	 movs r2,#128
 1083 017e 0123     	 movs r3,#1
 1084 0180 1343     	 orrs r3,r3,r2
 1085 0182 DBB2     	 uxtb r3,r3
 1086 0184 7B72     	 strb r3,[r7,#9]
 198:../main.c     **** 	if(SPI_MASTER_Transmit(SPI_MASTER_sel, SendData, 2) == SPI_MASTER_STATUS_SUCCESS)
 1087              	 .loc 5 198 0
 1088 0186 07F10803 	 add r3,r7,#8
 1089 018a 7868     	 ldr r0,[r7,#4]
 1090 018c 1946     	 mov r1,r3
 1091 018e 0222     	 movs r2,#2
 1092 0190 FFF7FEFF 	 bl SPI_MASTER_Transmit
 1093 0194 0346     	 mov r3,r0
 1094 0196 002B     	 cmp r3,#0
 1095 0198 06D1     	 bne .L38
 199:../main.c     **** 			while(SPI_MASTER_IsTxBusy(SPI_MASTER_sel));
 1096              	 .loc 5 199 0
 1097 019a 00BF     	 nop
 1098              	.L39:
 1099              	 .loc 5 199 0 is_stmt 0 discriminator 1
 1100 019c 7868     	 ldr r0,[r7,#4]
 1101 019e FFF7FEFF 	 bl SPI_MASTER_IsTxBusy
 1102 01a2 0346     	 mov r3,r0
 1103 01a4 002B     	 cmp r3,#0
 1104 01a6 F9D1     	 bne .L39
 1105              	.L38:
 200:../main.c     **** 
 201:../main.c     **** 	counter = 0;
 1106              	 .loc 5 201 0 is_stmt 1
 1107 01a8 0023     	 movs r3,#0
 1108 01aa FB60     	 str r3,[r7,#12]
 202:../main.c     **** 	while(counter<3000000)
 1109              	 .loc 5 202 0
 1110 01ac 02E0     	 b .L40
 1111              	.L41:
 203:../main.c     **** 	{
 204:../main.c     **** 		counter++;
 1112              	 .loc 5 204 0
 1113 01ae FB68     	 ldr r3,[r7,#12]
 1114 01b0 0133     	 adds r3,r3,#1
 1115 01b2 FB60     	 str r3,[r7,#12]
 1116              	.L40:
 202:../main.c     **** 	while(counter<3000000)
 1117              	 .loc 5 202 0
 1118 01b4 FB68     	 ldr r3,[r7,#12]
 1119 01b6 034A     	 ldr r2,.L42
 1120 01b8 9342     	 cmp r3,r2
 1121 01ba F8DD     	 ble .L41
 205:../main.c     **** 	}
 206:../main.c     **** 
 207:../main.c     **** }
 1122              	 .loc 5 207 0
 1123 01bc 1037     	 adds r7,r7,#16
 1124              	.LCFI56:
 1125              	 .cfi_def_cfa_offset 8
 1126 01be BD46     	 mov sp,r7
 1127              	.LCFI57:
 1128              	 .cfi_def_cfa_register 13
 1129              	 
 1130 01c0 80BD     	 pop {r7,pc}
 1131              	.L43:
 1132 01c2 00BF     	 .align 2
 1133              	.L42:
 1134 01c4 BFC62D00 	 .word 2999999
 1135              	 .cfi_endproc
 1136              	.LFE367:
 1138              	 .section .text.prvSendSPI,"ax",%progbits
 1139              	 .align 2
 1140              	 .thumb
 1141              	 .thumb_func
 1143              	prvSendSPI:
 1144              	.LFB368:
 208:../main.c     **** 
 209:../main.c     **** 
 210:../main.c     **** 
 211:../main.c     **** static void prvSendSPI( void *pvParameters )
 212:../main.c     **** {
 1145              	 .loc 5 212 0
 1146              	 .cfi_startproc
 1147              	 
 1148              	 
 1149 0000 80B5     	 push {r7,lr}
 1150              	.LCFI58:
 1151              	 .cfi_def_cfa_offset 8
 1152              	 .cfi_offset 7,-8
 1153              	 .cfi_offset 14,-4
 1154 0002 84B0     	 sub sp,sp,#16
 1155              	.LCFI59:
 1156              	 .cfi_def_cfa_offset 24
 1157 0004 00AF     	 add r7,sp,#0
 1158              	.LCFI60:
 1159              	 .cfi_def_cfa_register 7
 1160 0006 7860     	 str r0,[r7,#4]
 213:../main.c     **** 
 214:../main.c     **** 	// A list of the 12 registers that we need to read, OR'd with the Read bit
 215:../main.c     **** //	uint8_t SPI_SendData[12] = {ACCEL_DATA_X1 | Bit7, ACCEL_DATA_X0 | Bit7, ACCEL_DATA_Y1 | Bit7, AC
 216:../main.c     **** //	uint8_t SPI_ReadData[12];
 217:../main.c     **** 
 218:../main.c     **** //	uint8_t SPI_WriteBuffer[24]  = { ACCEL_DATA_X1 | Bit7, 0,  ACCEL_DATA_X0 | Bit7, 0,  ACCEL_DATA_
 219:../main.c     **** //									GYRO_DATA_X0 | Bit7, 0,  GYRO_DATA_Y1 | Bit7, 0,  GYRO_DATA_Y0 | Bit7, 0,  GYRO_DATA_Z1 
 220:../main.c     **** //	uint8_t SPI_ReadBuffer[24] = {0};
 221:../main.c     **** 
 222:../main.c     **** 	uint8_t SPI_WriteBuffer[2]  = { ACCEL_DATA_X1 | Bit7, 0};
 1161              	 .loc 5 222 0
 1162 0008 1F22     	 movs r2,#31
 1163 000a 8023     	 movs r3,#128
 1164 000c 1343     	 orrs r3,r3,r2
 1165 000e DBB2     	 uxtb r3,r3
 1166 0010 3B73     	 strb r3,[r7,#12]
 1167 0012 0023     	 movs r3,#0
 1168 0014 7B73     	 strb r3,[r7,#13]
 223:../main.c     **** 	uint8_t SPI_ReadBuffer[2] = {0};
 1169              	 .loc 5 223 0
 1170 0016 0023     	 movs r3,#0
 1171 0018 3B81     	 strh r3,[r7,#8]
 224:../main.c     **** 
 225:../main.c     **** 
 226:../main.c     **** 	DIGITAL_IO_SetOutputLow(&TESTPIN);
 1172              	 .loc 5 226 0
 1173 001a 1A48     	 ldr r0,.L49
 1174 001c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 227:../main.c     **** 	imu_init(&SPI_MASTER_0);
 1175              	 .loc 5 227 0
 1176 0020 1948     	 ldr r0,.L49+4
 1177 0022 FFF7FEFF 	 bl imu_init
 228:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&TESTPIN);
 1178              	 .loc 5 228 0
 1179 0026 1748     	 ldr r0,.L49
 1180 0028 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1181              	.L48:
 229:../main.c     **** 
 230:../main.c     **** 
 231:../main.c     **** 	for( ;; )
 232:../main.c     **** 	{
 233:../main.c     **** 
 234:../main.c     **** 
 235:../main.c     ****  		DIGITAL_IO_SetOutputLow(&TESTPIN);
 1182              	 .loc 5 235 0
 1183 002c 1548     	 ldr r0,.L49
 1184 002e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 236:../main.c     **** 
 237:../main.c     ****  		SPI_MASTER_Transfer(&SPI_MASTER_0, SPI_WriteBuffer, SPI_ReadBuffer, 2);
 1185              	 .loc 5 237 0
 1186 0032 07F10C02 	 add r2,r7,#12
 1187 0036 07F10803 	 add r3,r7,#8
 1188 003a 1348     	 ldr r0,.L49+4
 1189 003c 1146     	 mov r1,r2
 1190 003e 1A46     	 mov r2,r3
 1191 0040 0223     	 movs r3,#2
 1192 0042 FFF7FEFF 	 bl SPI_MASTER_Transfer
 238:../main.c     **** 
 239:../main.c     ****  		 		/* Wait until the data transmission is finished */
 240:../main.c     ****  		 		while(SPI_MASTER_0.runtime->tx_busy)
 1193              	 .loc 5 240 0
 1194 0046 00BF     	 nop
 1195              	.L45:
 1196              	 .loc 5 240 0 is_stmt 0 discriminator 1
 1197 0048 0F4B     	 ldr r3,.L49+4
 1198 004a 9B68     	 ldr r3,[r3,#8]
 1199 004c 93F82030 	 ldrb r3,[r3,#32]
 1200 0050 DBB2     	 uxtb r3,r3
 1201 0052 002B     	 cmp r3,#0
 1202 0054 F8D1     	 bne .L45
 241:../main.c     ****  		 		{
 242:../main.c     ****  		 		}
 243:../main.c     **** 
 244:../main.c     ****  		 		while(SPI_MASTER_0.runtime->rx_busy)
 1203              	 .loc 5 244 0 is_stmt 1
 1204 0056 00BF     	 nop
 1205              	.L46:
 1206              	 .loc 5 244 0 is_stmt 0 discriminator 1
 1207 0058 0B4B     	 ldr r3,.L49+4
 1208 005a 9B68     	 ldr r3,[r3,#8]
 1209 005c DB7F     	 ldrb r3,[r3,#31]
 1210 005e DBB2     	 uxtb r3,r3
 1211 0060 002B     	 cmp r3,#0
 1212 0062 F9D1     	 bne .L46
 245:../main.c     ****  		 		{
 246:../main.c     ****  		 		}
 247:../main.c     **** 
 248:../main.c     **** 				/* Ensure the last byte is shifted out from the buffer at lower baud rates, when frame end mode
 249:../main.c     **** 				while (SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_MSLS) != 0U)
 1213              	 .loc 5 249 0 is_stmt 1
 1214 0064 00BF     	 nop
 1215              	.L47:
 1216              	 .loc 5 249 0 is_stmt 0 discriminator 1
 1217 0066 0848     	 ldr r0,.L49+4
 1218 0068 0121     	 movs r1,#1
 1219 006a FFF7FEFF 	 bl SPI_MASTER_GetFlagStatus
 1220 006e 0346     	 mov r3,r0
 1221 0070 002B     	 cmp r3,#0
 1222 0072 F8D1     	 bne .L47
 250:../main.c     **** 				{
 251:../main.c     **** 
 252:../main.c     **** 				}
 253:../main.c     **** 
 254:../main.c     ****  		 		DIGITAL_IO_SetOutputHigh(&TESTPIN);
 1223              	 .loc 5 254 0 is_stmt 1
 1224 0074 0348     	 ldr r0,.L49
 1225 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 255:../main.c     **** 
 256:../main.c     **** 
 257:../main.c     **** 
 258:../main.c     **** // 		 SPI_MASTER_Transmit(&SPI_MASTER_0, SPI_SendData, 12);
 259:../main.c     **** // 		 SPI_MASTER_Receive(&SPI_MASTER_0, SPI_ReadData, 12);
 260:../main.c     **** // //		SPI_MASTER_Transfer(&SPI_MASTER_0, SPI_SendData, SPI_ReadData, 12);
 261:../main.c     **** 
 262:../main.c     **** // 		/* Wait until the data transmission is finished */
 263:../main.c     **** // 		while(SPI_MASTER_0.runtime->tx_busy)
 264:../main.c     **** // 		{
 265:../main.c     **** // 		}
 266:../main.c     **** 
 267:../main.c     **** // 		while(SPI_MASTER_0.runtime->rx_busy)
 268:../main.c     **** // 		{
 269:../main.c     **** // 		}
 270:../main.c     **** 
 271:../main.c     **** // 		/* Ensure the last byte is shifted out from the buffer at lower baud rates, when frame end mod
 272:../main.c     **** // 		while (SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_MSLS) != 0U)
 273:../main.c     **** // 		{
 274:../main.c     **** 
 275:../main.c     **** // 		}
 276:../main.c     **** 
 277:../main.c     **** 		// DIGITAL_IO_SetOutputHigh(&TESTPIN);
 278:../main.c     **** 
 279:../main.c     **** 		// Collect data from IMU
 280:../main.c     **** //		for(int i = 0; i<12; i++)
 281:../main.c     **** //		 {
 282:../main.c     **** //			DIGITAL_IO_SetOutputLow(&TESTPIN);
 283:../main.c     **** //			 // Transmits the specified number of data words
 284:../main.c     **** //			 if(SPI_MASTER_Transmit(&SPI_MASTER_0, &SPI_SendData[i], 1) == SPI_MASTER_STATUS_SUCCESS)
 285:../main.c     **** //				 while(SPI_MASTER_IsTxBusy(&SPI_MASTER_0));
 286:../main.c     **** //
 287:../main.c     **** //			 // Receives the specified number of data words
 288:../main.c     **** //			 if(SPI_MASTER_Receive(&SPI_MASTER_0, &SPI_ReadData[i], 1) == SPI_MASTER_STATUS_SUCCESS);
 289:../main.c     **** //				 while(SPI_MASTER_IsRxBusy(&SPI_MASTER_0));
 290:../main.c     **** //			DIGITAL_IO_SetOutputHigh(&TESTPIN);
 291:../main.c     **** //
 292:../main.c     **** //		 }
 293:../main.c     **** 
 294:../main.c     **** 
 295:../main.c     **** 
 296:../main.c     **** 
 297:../main.c     **** 	  vTaskDelay(2000);
 1226              	 .loc 5 297 0
 1227 007a 4FF4FA60 	 mov r0,#2000
 1228 007e FFF7FEFF 	 bl vTaskDelay
 298:../main.c     **** 	}
 1229              	 .loc 5 298 0
 1230 0082 D3E7     	 b .L48
 1231              	.L50:
 1232              	 .align 2
 1233              	.L49:
 1234 0084 00000000 	 .word TESTPIN
 1235 0088 00000000 	 .word SPI_MASTER_0
 1236              	 .cfi_endproc
 1237              	.LFE368:
 1239              	 .section .text.prvBlinkyTask,"ax",%progbits
 1240              	 .align 2
 1241              	 .thumb
 1242              	 .thumb_func
 1244              	prvBlinkyTask:
 1245              	.LFB369:
 299:../main.c     **** }
 300:../main.c     **** /*-----------------------------------------------------------*/
 301:../main.c     **** 
 302:../main.c     **** 
 303:../main.c     **** static void prvBlinkyTask( void *pvParameters )
 304:../main.c     **** {
 1246              	 .loc 5 304 0
 1247              	 .cfi_startproc
 1248              	 
 1249              	 
 1250 0000 80B5     	 push {r7,lr}
 1251              	.LCFI61:
 1252              	 .cfi_def_cfa_offset 8
 1253              	 .cfi_offset 7,-8
 1254              	 .cfi_offset 14,-4
 1255 0002 82B0     	 sub sp,sp,#8
 1256              	.LCFI62:
 1257              	 .cfi_def_cfa_offset 16
 1258 0004 00AF     	 add r7,sp,#0
 1259              	.LCFI63:
 1260              	 .cfi_def_cfa_register 7
 1261 0006 7860     	 str r0,[r7,#4]
 1262              	.L52:
 305:../main.c     ****   for( ;; )
 306:../main.c     ****   {
 307:../main.c     **** 	  DIGITAL_IO_ToggleOutput(&TESTPIN);
 1263              	 .loc 5 307 0 discriminator 1
 1264 0008 0348     	 ldr r0,.L53
 1265 000a FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 308:../main.c     **** 	  vTaskDelay(1500);
 1266              	 .loc 5 308 0 discriminator 1
 1267 000e 40F2DC50 	 movw r0,#1500
 1268 0012 FFF7FEFF 	 bl vTaskDelay
 309:../main.c     ****   }
 1269              	 .loc 5 309 0 discriminator 1
 1270 0016 F7E7     	 b .L52
 1271              	.L54:
 1272              	 .align 2
 1273              	.L53:
 1274 0018 00000000 	 .word TESTPIN
 1275              	 .cfi_endproc
 1276              	.LFE369:
 1278              	 .text
 1279              	.Letext0:
 1280              	 .file 6 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1281              	 .file 7 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1282              	 .file 8 "C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc/xmc4_gpio.h"
 1283              	 .file 9 "C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/FREERTOS/portable/GCC/portmacro.h"
 1284              	 .file 10 "C:/Workspaces/BachelorThesis/imu_test/Libraries/XMCLib/inc/xmc_usic.h"
 1285              	 .file 11 "C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DAVE.h"
 1286              	 .file 12 "C:/Workspaces/BachelorThesis/imu_test/Libraries/CMSIS/Include/cmsis_gcc.h"
 1287              	 .file 13 "C:/Workspaces/BachelorThesis/imu_test/Libraries/CMSIS/Include/core_cm4.h"
 1288              	 .file 14 "C:/Workspaces/BachelorThesis/imu_test/Libraries/CMSIS/Infineon/XMC4300_series/Include/system_XMC4300.h"
 1289              	 .file 15 "C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 1290              	 .file 16 "C:/Workspaces/BachelorThesis/imu_test/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 1291              	 .file 17 "../ICM-42688-P.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.XMC_GPIO_ToggleOutput:00000000 $t
    {standard input}:119    .text.XMC_GPIO_ToggleOutput:00000000 XMC_GPIO_ToggleOutput
    {standard input}:162    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:166    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:206    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:210    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:249    .text.DIGITAL_IO_ToggleOutput:00000000 $t
    {standard input}:253    .text.DIGITAL_IO_ToggleOutput:00000000 DIGITAL_IO_ToggleOutput
    {standard input}:292    .text.XMC_SPI_CH_GetStatusFlag:00000000 $t
    {standard input}:296    .text.XMC_SPI_CH_GetStatusFlag:00000000 XMC_SPI_CH_GetStatusFlag
    {standard input}:336    .text.SPI_MASTER_GetFlagStatus:00000000 $t
    {standard input}:340    .text.SPI_MASTER_GetFlagStatus:00000000 SPI_MASTER_GetFlagStatus
    {standard input}:382    .text.SPI_MASTER_IsTxBusy:00000000 $t
    {standard input}:386    .text.SPI_MASTER_IsTxBusy:00000000 SPI_MASTER_IsTxBusy
    {standard input}:430    .rodata.Bit0:00000000 Bit0
    {standard input}:436    .rodata.Bit1:00000000 Bit1
    {standard input}:442    .rodata.Bit2:00000000 Bit2
    {standard input}:448    .rodata.Bit3:00000000 Bit3
    {standard input}:454    .rodata.Bit4:00000000 Bit4
    {standard input}:460    .rodata.Bit5:00000000 Bit5
    {standard input}:466    .rodata.Bit6:00000000 Bit6
    {standard input}:472    .rodata.Bit7:00000000 Bit7
    {standard input}:478    .rodata.PWR_MGMT0:00000000 PWR_MGMT0
    {standard input}:484    .rodata.DEVICE_CONFIG:00000000 DEVICE_CONFIG
    {standard input}:490    .rodata.SENSOR_CONFIG0:00000000 SENSOR_CONFIG0
    {standard input}:496    .rodata.WHO_AM_I:00000000 WHO_AM_I
    {standard input}:502    .rodata.TEMP_DATA1:00000000 TEMP_DATA1
    {standard input}:508    .rodata.TEMP_DATA:00000000 TEMP_DATA
    {standard input}:514    .rodata.ACCEL_CONFIG0:00000000 ACCEL_CONFIG0
    {standard input}:520    .rodata.ACCEL_DATA_X1:00000000 ACCEL_DATA_X1
    {standard input}:526    .rodata.ACCEL_DATA_X0:00000000 ACCEL_DATA_X0
    {standard input}:532    .rodata.ACCEL_DATA_Y1:00000000 ACCEL_DATA_Y1
    {standard input}:538    .rodata.ACCEL_DATA_Y0:00000000 ACCEL_DATA_Y0
    {standard input}:544    .rodata.ACCEL_DATA_Z1:00000000 ACCEL_DATA_Z1
    {standard input}:550    .rodata.ACCEL_DATA_Z0:00000000 ACCEL_DATA_Z0
    {standard input}:556    .rodata._16_G:00000000 _16_G
    {standard input}:557    .rodata._16_G:00000000 $d
    {standard input}:562    .rodata._8_G:00000000 _8_G
    {standard input}:568    .rodata._4_G:00000000 _4_G
    {standard input}:574    .rodata._2_G:00000000 _2_G
    {standard input}:580    .rodata.GYRO_CONFIG0:00000000 GYRO_CONFIG0
    {standard input}:586    .rodata.GYRO_DATA_X1:00000000 GYRO_DATA_X1
    {standard input}:592    .rodata.GYRO_DATA_X0:00000000 GYRO_DATA_X0
    {standard input}:598    .rodata.GYRO_DATA_Y1:00000000 GYRO_DATA_Y1
    {standard input}:604    .rodata.GYRO_DATA_Y0:00000000 GYRO_DATA_Y0
    {standard input}:610    .rodata.GYRO_DATA_Z1:00000000 GYRO_DATA_Z1
    {standard input}:616    .rodata.GYRO_DATA_Z0:00000000 GYRO_DATA_Z0
    {standard input}:622    .rodata._2000_DPS:00000000 _2000_DPS
    {standard input}:623    .rodata._2000_DPS:00000000 $d
    {standard input}:628    .rodata._1000_DPS:00000000 _1000_DPS
    {standard input}:634    .rodata._500_DPS:00000000 _500_DPS
    {standard input}:640    .rodata._250_DPS:00000000 _250_DPS
    {standard input}:646    .rodata._125_DPS:00000000 _125_DPS
    {standard input}:652    .rodata._65_5_DPS:00000000 _65_5_DPS
    {standard input}:658    .rodata._31_25_DPS:00000000 _31_25_DPS
    {standard input}:664    .rodata._15_625_DPS:00000000 _15_625_DPS
    {standard input}:670    .rodata._32_kHz:00000000 _32_kHz
    {standard input}:676    .rodata._16_kHz:00000000 _16_kHz
    {standard input}:682    .rodata._8_kHz:00000000 _8_kHz
    {standard input}:688    .rodata._4_kHz:00000000 _4_kHz
    {standard input}:694    .rodata._2_kHz:00000000 _2_kHz
    {standard input}:700    .rodata._1_kHz:00000000 _1_kHz
    {standard input}:706    .rodata.ACCEL_CONFIG1:00000000 ACCEL_CONFIG1
    {standard input}:712    .rodata.GYRO_CONFIG1:00000000 GYRO_CONFIG1
    {standard input}:718    .rodata.GYRO_ACCEL_CONFIG0:00000000 GYRO_ACCEL_CONFIG0
    {standard input}:724    .rodata.bw0:00000000 bw0
    {standard input}:725    .rodata.bw0:00000000 $d
    {standard input}:730    .rodata.bw1:00000000 bw1
    {standard input}:736    .rodata.bw2:00000000 bw2
    {standard input}:742    .rodata.bw3:00000000 bw3
    {standard input}:748    .rodata.bw4:00000000 bw4
    {standard input}:754    .rodata.bw5:00000000 bw5
    {standard input}:760    .rodata.bw6:00000000 bw6
    {standard input}:766    .rodata.bw7:00000000 bw7
    {standard input}:769    .rodata:00000000 $d
    {standard input}:773    .text.main:00000000 $t
    {standard input}:778    .text.main:00000000 main
    {standard input}:823    .text.main:00000030 $d
    {standard input}:1143   .text.prvSendSPI:00000000 prvSendSPI
    {standard input}:829    .text.imu_init:00000000 $t
    {standard input}:834    .text.imu_init:00000000 imu_init
    {standard input}:1134   .text.imu_init:000001c4 $d
    {standard input}:1139   .text.prvSendSPI:00000000 $t
    {standard input}:1234   .text.prvSendSPI:00000084 $d
    {standard input}:1240   .text.prvBlinkyTask:00000000 $t
    {standard input}:1244   .text.prvBlinkyTask:00000000 prvBlinkyTask
    {standard input}:1274   .text.prvBlinkyTask:00000018 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
xTaskCreate
vTaskStartScheduler
SPI_MASTER_Transmit
SPI_MASTER_Transfer
vTaskDelay
TESTPIN
SPI_MASTER_0
